train:
  name: multi
  cmd : python -m paddle.distributed.launch tools/train.py
  params:
    - -c ${rd_yaml_path}
    - -o Global.use_gpu=${use_gpu}
    - Global.epoch_num=1
    - Global.save_epoch_step=1
    - Global.eval_batch_step=200
    - Global.print_batch_step=10
    - Global.save_model_dir=output/${qa_yaml_name}
    - Train.loader.batch_size_per_card=10
    - Global.print_batch_step=1
  result:
    exit_code:
      base: 0
      threshold: 0
      evaluation: "="

eval:
  name: trained
  cmd:  python tools/eval.py
  params:
    - -c ${rd_yaml_path}
    - -o Architecture.Backbone.checkpoints=output/${qa_yaml_name}/latest
    - Global.use_gpu=${use_gpu}

  name: pretrained
  cmd:  python tools/eval.py
  params:
    - -c ${rd_yaml_path}
    - -o Architecture.Backbone.checkpoints==${model}/best_accuracy
    - Global.use_gpu=${use_gpu}

  result:
    exit_code:
      base: 0
      threshold: 0
      evaluation: "="
infer:
  name: trained
  cmd:  python tools/infer_kie_token_ser.py
  params:
    - -c ${rd_yaml_path}
    - -o Global.use_gpu=${use_gpu}
    - Architecture.Backbone.checkpoints=output/${qa_yaml_name}/latest
    - Global.infer_img=./train_data/XFUND/zh_val/val.json
    - Global.infer_mode=False

  name: pretrained
  cmd:  python tools/infer_kie_token_ser.py
  params:
    - -c ${rd_yaml_path}
    - -o Global.use_gpu=${use_gpu}
    - Architecture.Backbone.checkpoints=${model}/best_accuracy
    - Global.infer_img=./train_data/XFUND/zh_val/val.json
    - Global.infer_mode=False

  result:
    exit_code:
      base: 0
      threshold: 0
      evaluation: "="
export:
  name: trained
  cmd:  python tools/export_model.py
  params:
    - -c ${rd_yaml_path}
    - -o Global.pretrained_model=output/${qa_yaml_name}/latest
    - Global.save_inference_dir=./models_inference/${qa_yaml_name}

  name: pretrained
  cmd:  python tools/export_model.py
  params:
    - -c ${rd_yaml_path}
    - -o Architecture.Backbone.checkpoints=./${model}/best_accuracy 
    - Global.save_inference_dir=./models_inference/${model}
    - Global.use_gpu=${use_gpu}

  result:
    exit_code:
      base: 0
      threshold: 0
      evaluation: "="
