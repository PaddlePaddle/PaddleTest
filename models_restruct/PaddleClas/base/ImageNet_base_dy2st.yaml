train:
  -
    name: dy
    cmd: python tools/train.py -c ppcls/configs/ImageNet/ResNet/ResNet50_amp_O2_ultra.yaml
    params:
      - -o Global.device=gpu
      - -o Global.print_batch_step=10
      - -o Global.epochs=20
      - -o DataLoader.Train.sampler.batch_size=64
      - -o DataLoader.Train.dataset.image_root=big_dataset/ILSVRC2012
      - -o DataLoader.Train.dataset.cls_label_path=big_dataset/ILSVRC2012/partial_shuf_train_list.txt
      - -o DataLoader.Eval.dataset.image_root=big_dataset/ILSVRC2012
      - -o DataLoader.Eval.dataset.cls_label_path=big_dataset/ILSVRC2012/partial_shuf_val_list.txt
      - -o Global.save_interval=10
      - -o Global.eval_interval=1000
      - -o Global.eval_during_train=True
      - -o Global.use_dali=True
      - -o Global.seed=1234
      - -o Optimizer.lr.name=Cosine
      - -o Optimizer.lr.learning_rate=0.2
    result:
      loss:
        base: 20
        threshold: 0
        evaluation: "="
eval:
  -
    name: function
    cmd: python tools/eval.py -c ${rd_yaml_path}
    params:
      - -o Global.output_dir=output/${qa_yaml_name}_eval_function
  -
    name: trained
    cmd: python -m paddle.distributed.launch tools/eval.py -c ${rd_yaml_path}
    params:
      - -o Global.pretrained_model=${eval_trained_model}
      - -o Global.output_dir=output/${qa_yaml_name}_eval_trained
    result:
      loss:
        base: 20
        threshold: 0
        evaluation: "="
  -
    name: pretrained
    cmd: python -m paddle.distributed.launch tools/eval.py -c ${rd_yaml_path}
    params:
      - -o Global.pretrained_model=${eval_pretrained_model}
      - -o Global.output_dir=output/${qa_yaml_name}_eval_pretrained
    result:
      loss:
        base: 20
        threshold: 0
        evaluation: "="
infer:
  -
    name: function
    cmd: python tools/infer.py -c ${rd_yaml_path}
    params:
      - -o Global.output_dir=output/${qa_yaml_name}_infer_function
    result:
      exit_code:
        base: 0
        threshold: 0
        evaluation: "="
  -
    name: trained
    cmd: python tools/infer.py -c ${rd_yaml_path}
    params:
      - -o Global.pretrained_model=${eval_trained_model}
      - -o Global.output_dir=output/${qa_yaml_name}_infer_trained
    result:
      class_ids:
        base: "[22, 22, 22, 22, 22]"
        threshold: 0
        evaluation: "="
  -
    name: pretrained
    cmd: python tools/infer.py -c ${rd_yaml_path}
    params:
      - -o Global.pretrained_model=${eval_pretrained_model}
      - -o Global.output_dir=output/${qa_yaml_name}_infer_pretrained
    result:
      class_ids:
        base: "[8, 7, 86, 82, 476]"
        threshold: 0
        evaluation: "="
export:
  -
    name: function
    cmd: python tools/export_model.py -c ${rd_yaml_path}
    params:
      - -o Global.output_dir=output/${qa_yaml_name}_export_function
      - -o Global.save_inference_dir=./inference/${qa_yaml_name}
  -
    name: trained
    cmd: python tools/export_model.py -c ${rd_yaml_path}
    params:
      - -o Global.pretrained_model=${eval_trained_model}
      - -o Global.save_inference_dir=${export_trained_model}
      - -o Global.output_dir=output/${qa_yaml_name}_export_trained
  -
    name: pretrained
    cmd: python tools/export_model.py -c ${rd_yaml_path}
    params:
      - -o Global.pretrained_model=${eval_pretrained_model}
      - -o Global.save_inference_dir=${export_pretrained_model}
      - -o Global.output_dir=output/${qa_yaml_name}_export_pretrained
predict:
  -
    name: function
    path: deploy
    cmd: python python/predict_cls.py
    params:
      - -c configs/inference_cls.yaml
      - -o Global.inference_model_dir=../inference/${qa_yaml_name}
      - -o Global.use_gpu=${set_cuda_flag}
      - -o Global.output_dir=output/${qa_yaml_name}_predict_function
  -
    name: trained
    path: deploy
    cmd: python python/predict_cls.py
    params:
      - -c configs/inference_cls.yaml
      - -o Global.infer_imgs="./images"
      - -o Global.inference_model_dir=${predict_trained_model}
      - -o Global.use_gpu=${set_cuda_flag}
      - -o Global.output_dir=output/${qa_yaml_name}_predict_trained
    result:
      class_ids:
        base: "[11, 11, 11, 11]"
        threshold: 0
        evaluation: "="
  -
    name: pretrained
    path: deploy
    cmd: python python/predict_cls.py
    params:
      - -c configs/inference_cls.yaml
      - -o Global.infer_imgs="./images"
      - -o Global.inference_model_dir=${predict_pretrained_model}
      - -o Global.use_gpu=${set_cuda_flag}
      - -o Global.output_dir=output/${qa_yaml_name}_predict_pretrained
    result:
      class_ids:
        base: "[443, 84, 808, 511]"
        threshold: 0
        evaluation: "="
