adaptive_avg_pool2d_0:
  desc: Case描述, auto generate from OP benchmark
  paddle:
    api_name: paddle.nn.functional.adaptive_avg_pool2d
    inputs:
      x:
        dtype: float32
        random: true
        shape: [4, 2048, 64, 128]
    params:
      data_format: NCHW
      output_size: [32, 32]
  pytorch:
    api_name: torch.nn.functional.adaptive_avg_pool2d
    mapping:
      ins: {x: input, output_size: output_size}

adaptive_avg_pool2d_1:
  desc: Case描述, auto generate from OP benchmark
  paddle:
    api_name: paddle.nn.functional.adaptive_avg_pool2d
    inputs:
      x:
        dtype: float16
        random: true
        shape: [4, 2048, 64, 128]
    params:
      data_format: NCHW
      output_size: [32, 32]
  pytorch:
    api_name: torch.nn.functional.adaptive_avg_pool2d
    mapping:
      ins: {x: input, output_size: output_size}

#bincount_0:
#  desc: Case描述, auto generate from OP benchmark
#  paddle:
#    api_name: paddle.bincount
#    inputs:
#      x:
#        dtype: int32
#        random: true
#        shape: [ 51200 ]
#        range: [ 0, 10 ]
#      weights:
#        dtype: int64
#        random: true
#        shape: [51200]
#    params:
#      minlength: 1
#  pytorch:
#    api_name: torch.bincount
#    mapping:
#      ins: {weights: weights, x: input, minlength: minlength}


#bincount_1:
#  desc: Case描述, auto generate from OP benchmark
#  paddle:
#    api_name: paddle.bincount
#    inputs:
#      x:
#        dtype: int64
#        random: true
#        shape: [25600]
#        range: [ 0, 10 ]
#      weights:
#        dtype: float32
#        random: true
#        shape: [25600]
#    params:
#      minlength: 0
#  pytorch:
#    api_name: torch.bincount
#    mapping:
#      ins: {weights: weights, x: input, minlength: minlength}

bmm_0:
  desc: Case描述, auto generate from OP benchmark
  paddle:
    api_name: paddle.bmm
    inputs:
      x:
        dtype: float32
        random: true
        shape: [2, 19, 32768]
      y:
        dtype: float32
        random: true
        shape: [2, 32768, 512]
    params: {}
  pytorch:
    api_name: torch.bmm
    mapping:
      ins: {x: input, y: mat2}

bmm_1:
  desc: Case描述, auto generate from OP benchmark
  paddle:
    api_name: paddle.bmm
    inputs:
      x:
        dtype: float32
        random: true
        shape: [2, 32768, 256]
      y:
        dtype: float32
        random: true
        shape: [2, 256, 19]
    params: {}
  pytorch:
    api_name: torch.bmm
    mapping:
      ins: {x: input, y: mat2}

conv2d_0:
  desc: Case描述, auto generate from OP benchmark
  paddle:
    api_name: paddle.nn.functional.conv2d
    inputs:
      x:
        dtype: float32
        random: true
        shape: [1, 512, 7, 7]
      weight:
        dtype: float32
        random: true
        shape: [512, 512, 3, 3]
    params:
      data_format: NCHW
      dilation: 1
      groups: 1
      padding: 1
      stride: 1
  pytorch:
    api_name: torch.nn.functional.conv2d
    mapping:
      ins: {x: input, weight: weight, dilation: dilation, groups: groups, padding: padding, stride: stride }

conv2d_1:
  desc: Case描述, auto generate from OP benchmark
  paddle:
    api_name: paddle.nn.functional.conv2d
    inputs:
      x:
        dtype: float32
        random: true
        shape: [ 1, 2048, 2, 2 ]
      weight:
        dtype: float32
        random: true
        shape: [5, 2048, 2, 2]
    params:
      data_format: NCHW
      dilation: 1
      padding: 0
      stride: 1
  pytorch:
    api_name: torch.nn.functional.conv2d
    mapping:
      ins: {x: input, weight: weight, dilation: dilation, padding: padding, stride: stride}

conv2d_2:
  desc: Case描述, auto generate from OP benchmark
  paddle:
    api_name: paddle.nn.functional.conv2d
    inputs:
      x:
        dtype: float32
        random: true
        shape: [ 1, 512, 64, 402 ]
    params:
      weight:
        dtype: float32
        random: true
        shape: [ 1024, 512, 1, 1 ]
      data_format: NCHW
      dilation: 1
      padding: 0
      stride: !!python/tuple [2, 1]
  pytorch:
    api_name: torch.nn.functional.conv2d
    mapping:
      ins: {x: input, weight: weight, dilation: dilation, padding: padding, stride: stride}

conv2d_3:
  desc: Case描述, auto generate from OP benchmark
  paddle:
    api_name: paddle.nn.functional.conv2d
    inputs:
      x:
        dtype: float32
        random: true
        shape: [1, 128, 257, 257]
    params:
      weight:
        dtype: float32
        random: true
        shape: [ 128, 128, 1, 1 ]
      data_format: NCHW
      dilation: 1
      groups: 1
      padding: 0
      stride: 1
  pytorch:
    api_name: torch.nn.functional.conv2d
    mapping:
      ins: {x: input, weight: weight, dilation: dilation, groups: groups, padding: padding, stride: stride}

conv2d_4:
  desc: Case描述, auto generate from OP benchmark
  paddle:
    api_name: paddle.nn.functional.conv2d
    inputs:
      x:
        dtype: float32
        random: true
        shape: [1, 2048, 1, 1]
    params:
      weight:
        dtype: float32
        random: true
        shape: [ 256, 2048, 1, 1 ]
      data_format: NCHW
      dilation: 1
      groups: 1
      padding: 0
      stride: 1
  pytorch:
    api_name: torch.nn.functional.conv2d
    mapping:
      ins: {x: input, weight: weight, dilation: dilation, groups: groups, padding: padding, stride: stride}

conv2d_5:
  desc: Case描述, auto generate from OP benchmark
  paddle:
    api_name: paddle.nn.functional.conv2d
    inputs:
      x:
        dtype: float32
        random: true
        shape: [1, 3, 128, 128]
    params:
      weight:
        dtype: float32
        random: true
        shape: [ 64, 3, 4, 4 ]
      data_format: NCHW
      dilation: 1
      padding: [1, 1]
      stride: 2
  pytorch:
    api_name: torch.nn.functional.conv2d
    mapping:
      ins: {x: input, weight: weight, dilation: dilation, padding: padding, stride: stride}

conv2d_6:
  desc: Case描述, auto generate from OP benchmark
  paddle:
    api_name: paddle.nn.functional.conv2d
    inputs:
      x:
        dtype: float32
        random: true
        shape: [1, 3, 513, 513]
    params:
      weight:
        dtype: float32
        random: true
        shape: [ 32, 3, 3, 3 ]
      data_format: NCHW
      dilation: 1
      padding: 1
      stride: 2
  pytorch:
    api_name: torch.nn.functional.conv2d
    mapping:
      ins: {x: input, weight: weight, dilation: dilation, padding: padding, stride: stride}

conv2d_7:
  desc: Case描述, auto generate from OP benchmark
  paddle:
    api_name: paddle.nn.functional.conv2d
    inputs:
      x:
        dtype: float32
        random: true
        shape: [1, 1, 512, 402]
    params:
      weight:
        dtype: float32
        random: true
        shape: [ 32, 1, 7, 1 ]
      data_format: NCHW
      dilation: 1
      padding: !!python/tuple [3, 0]
      stride: !!python/tuple [2, 1]
  pytorch:
    api_name: torch.nn.functional.conv2d
    mapping:
      ins: {x: input, weight: weight, dilation: dilation, padding: padding, stride: stride}

conv2d_8:
  desc: Case描述, auto generate from OP benchmark
  paddle:
    api_name: paddle.nn.functional.conv2d
    inputs:
      weight:
        dtype: float16
        random: true
        shape: [1, 1, 3, 32]
      x:
        dtype: float16
        random: true
        shape: [1, 1, 80, 1008]
    params:
      data_format: NCHW
      dilation: !!python/tuple [1, 1]
      groups: 1
      padding: !!python/tuple [1, 8]
      stride: !!python/tuple [1, 16]
  pytorch:
    api_name: torch.nn.functional.conv2d
    mapping:
      ins: {x: input, weight: weight, dilation: dilation, padding: padding, stride: stride, groups: groups}

conv2d_9:
  desc: Case描述, auto generate from OP benchmark
  paddle:
    api_name: paddle.nn.functional.conv2d
    inputs:
      x:
        dtype: float32
        random: true
        shape: [2, 512, 129, 129]
    params:
      weight:
        dtype: float32
        random: true
        shape: [512, 512, 3, 3]
      data_format: NCHW
      dilation: !!python/tuple [16, 16]
      groups: 1
      padding: !!python/tuple [0, 0]
      stride: !!python/tuple [1, 1]
  pytorch:
    api_name: torch.nn.functional.conv2d
    mapping:
      ins: {x: input, weight: weight, dilation: dilation, padding: padding, stride: stride, groups: groups}
