InstanceNorm1D_base:
  desc: "1维实例归一化"
  paddle:
    api_name: "paddle.nn.InstanceNorm1D"
    inputs:
      data:
        random: true
        type: "Tensor"
        dtype: "float32"
        shape: [2, 2, 3]
        range: [ -1, 1]
    params:
      num_features: 2
      epsilon: 0.00001
      momentum: 0.9
      data_format: 'NCL'
  pytorch:
    api_name: "torch.nn.InstanceNorm1d"
    mapping:
      ins: { data: input, num_features: num_features, epsilon: eps, momentum: momentum }
      excess:
        place: True

Module_1:
  desc: "示例module结构"
  paddle:
    Layer:
      repo: "PaddleOCR"
      layer_name: "ppocr.modeling.heads.rec_srn_head.VSFD"
      params:
        in_channels: 512
        pvam_ch: 512
        char_num: 38
    DataLoader: "single"
    Data:
      data0:
        input:
          random: True
          type: "Tensor"
          dtype: "float32"
          shape: [32, 32, 512]
          range: [ -1, 1]
        label: "None"
      data1:
        input:
          random: True
          type: "Tensor"
          dtype: "float32"
          shape: [32, 32, 512]
          range: [ -1, 1]
        label: "None"
    Loss:
      loss_api: "None"
    Train:
      step: 4
      optimizer:
        opt_api: "paddle.optimizer.SGD"
        learning_rate: 0.0001

Module_2:
  desc: "示例module结构"
  paddle:
    Layer:
      repo: "DIY"
      layer_name: "diy.linear.Linear"
      params:
        in_channels: 10
        pvam_ch: 10
        char_num: 3
    DataLoader: "single"
    Data:
      pvam_feature:
        input:
          type: "Tensor"
          dtype: "float32"
          shape: [4, 10]
          range: [ -1, 1]
        label: "None"
    Loss:
      loss_api: "None"
    Train:
      step: 4
      optimizer:
        opt_api: "paddle.optimizer.SGD"
        learning_rate: 0.0001

Module_3:
  desc: "OCR VSFD结构"
  paddle:
    Layer:
      repo: "DIY"
      layer_name: "diy.VSFD.VSFD"
      params:
        in_channels: 32
        pvam_ch: 32
        char_num: 19
    DataLoader: "single"
    Data:
      pvam_feature:
        input:
          random: True
          type: "Tensor"
          dtype: "float32"
          shape: [3, 3, 32]
          range: [ -1, 1]
        label: "None"
      gsrm_feature:
        input:
          random: True
          type: "Tensor"
          dtype: "float32"
          shape: [3, 3, 32]
          range: [ -1, 1]
        label: "None"
    Loss:
      loss_api: "None"
    Train:
      step: 17
      optimizer:
        opt_api: "paddle.optimizer.SGD"
        learning_rate: 0.0001

Module_4:
  desc: "Det SEBlock结构"
  paddle:
    Layer:
      repo: "DIY"
      layer_name: "diy.SEBlock.SEBlock"
      params:
        num_channels: 10
        lr_mult: 0.05
        reduction_ratio: 4
    DataLoader: "single"
    Data:
      inputs:
        input:
          type: "Tensor"
          dtype: "float32"
          shape: [3, 10, 24, 24]
          range: [ -1, 1]
        label: "None"
    Loss:
      loss_api: "None"
    Train:
      step: 20
      optimizer:
        opt_api: "paddle.optimizer.SGD"
        learning_rate: 0.0001

Module_5:
  desc: "Det SEBlock结构"
  paddle:
    Layer:
      repo: "PaddleDetection"
      layer_name: "ppdet.modeling.backbones.ghostnet.SEBlock"
      params:
        num_channels: 10
        lr_mult: 0.05
        reduction_ratio: 4
    DataLoader: "single"
    Data:
      inputs:
        input:
          random: True
          type: "Tensor"
          dtype: "float32"
          shape: [3, 10, 24, 24]
          range: [ -1, 1]
        label: "None"
    Loss:
      loss_api: "None"
    Train:
      step: 3
      optimizer:
        opt_api: "paddle.optimizer.SGD"
        learning_rate: 0.0001

Module_6:
  desc: "Det DarkNet"
  paddle:
    Layer:
      repo: "PaddleDetection"
      layer_name: "ppdet.modeling.backbones.darknet.DarkNet"
      params:
        depth: 53
        freeze_at: -1
        return_idx: [2, 3, 4]
        num_stages: 5
        norm_type: 'bn'
        norm_decay: 0.
        freeze_norm: False
        data_format: 'NCHW'
    DataLoader: "single"
    Data:
      inputs:
        input:
          random: True
          type: "Tensor"
          dtype: "float32"
          shape: [4, 3, 224, 224]
          range: [ -1, 1]
        label: "None"
    Loss:
      loss_api: "None"
    Train:
      step: 3
      optimizer:
        opt_api: "paddle.optimizer.SGD"
        learning_rate: 0.0001

Module_7:
  desc: "Det darknet.Blocks"
  paddle:
    Layer:
      repo: "PaddleDetection"
      layer_name: "ppdet.modeling.backbones.darknet.Blocks"
      params:
        ch_in: 16
        ch_out: 16
        count: 2
    DataLoader: "single"
    Data:
      inputs:
        input:
          random: True
          type: "Tensor"
          dtype: "float32"
          shape: [4, 16, 24, 24]
          range: [ -1, 1]
        label: "None"
    Loss:
      loss_api: "None"
    Train:
      step: 20
      optimizer:
        opt_api: "paddle.optimizer.SGD"
        learning_rate: 0.0001

#Module_8:
#  desc: "Det swin_transformer.Blocks"
#  paddle:
#    Layer:
#      repo: "PaddleDetection"
#      layer_name: "ppdet.modeling.backbones.swin_transformer.BasicLayer"
#      params:
#        dim: 16
#        depth: 2
#        num_heads: 4
#    DataLoader: "single"
#    Data:
#      x:
#        input:
#          random: True
#          type: "Tensor"
#          dtype: "float32"
#          shape: [4, 576, 16]
#          range: [ -1, 1]
#        label: "None"
#      H:
#        input:
#          random: False
#          type: "int"
#          dtype: "int32"
#          value: 24
#        label: "None"
#      W:
#        input:
#          random: False
#          type: "int"
#          dtype: "int32"
#          value: 24
#        label: "None"
#    Loss:
#      loss_api: "None"
#    Train:
#      step: 2
#      optimizer:
#        opt_api: "paddle.optimizer.SGD"
#        learning_rate: 0.0001
