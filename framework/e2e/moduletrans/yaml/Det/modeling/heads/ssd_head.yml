ssd_head_SepConvLayer_0:
  desc: "Det ppdet.modeling.heads.ssd_head.SepConvLayer模型结构"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.heads.ssd_head.SepConvLayer"
    params:
      in_channels: 16
      out_channels: 32
      kernel_size: 3
      padding: 1
      conv_decay: 0.
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      x:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float64"
        shape: [4, 16, 16, 16]
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
    dygraph_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001

#ssd_head_SSDExtraHead_0:
#  desc: "Det ppdet.modeling.heads.ssd_head.SSDExtraHead模型结构"
#  Layer:
#    repo: "PaddleDetection"
#    layer_name: "ppdet.modeling.heads.ssd_head.SSDExtraHead"
#    params:
#        in_channels: 32
#        out_channels: !!python/tuple [[32, 64], [32, 64], [16, 32], [16, 32], [16, 32]]
#        strides: !!python/tuple [2, 2, 2, 1, 1]
#        paddings: !!python/tuple [1, 1, 1, 0, 0]
#  DataGenerator:
#    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
#    data:
#      x:
#        generate_way: "random"  # random, solid, load
#        type: "Tensor"
#        dtype: "float64"
#        shape: [4, 32, 64, 64]
#        range: [ -1, 1]
#  Loss:
#    loss_name: "diy.loss.diy_loss.naive_loss_list"
#    params:
#      loss_list: ['logit[0]']
#  optimizer:
#    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
#    params:
#      opt_api: "paddle.optimizer.SGD"
#      learning_rate: 0.00001
#  Train:
#    step: 3
#  test:
#    dygraph_to_static_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    dygraph_to_static_predict_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    dygraph_to_infer_predict_test:
#      acc_test: False
#      delta: 0.000001
#      rtol: 0.000001
##    dygraph_train_test:
##      delta: 0.00000001
##      rtol: 0.00000001
##    dygraph_predict_test:
##      delta: 0.00000001
##      rtol: 0.00000001
##    static_train_test:
##      delta: 0.00000001
##      rtol: 0.00000001
##    static_predict_test:
##      delta: 0.00000001
##      rtol: 0.00000001
