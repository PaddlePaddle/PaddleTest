gfl_head_ScaleReg_0:
  desc: "Det ppdet.modeling.heads.gfl_head.ScaleReg模型结构"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.heads.gfl_head.ScaleReg"
    params:
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      inputs:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float64"
        shape: [4, 16, 16, 16]
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
    dygraph_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001

gfl_head_Integral_0:
  desc: "Det ppdet.modeling.heads.gfl_head.Integral模型结构"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.heads.gfl_head.Integral"
    params:
      reg_max: 8
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      x:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float32"
        shape: [7, 36]
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
#    dygraph_to_static_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
#    dygraph_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
    dygraph_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
#    static_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
    static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001

gfl_head_DGQP_0:
  desc: "Det ppdet.modeling.heads.gfl_head.DGQP模型结构"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.heads.gfl_head.DGQP"
    params:
      reg_topk: 4
      reg_channels: 64
      add_mean: True
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      x:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float64"
        shape: [4, 64, 16, 16]
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
    dygraph_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001

#gfl_head_GFLHead_0:
#  desc: "Det ppdet.modeling.heads.gfl_head.GFLHead模型结构"
#  Layer:
#    repo: "PaddleDetection"
#    layer_name: "ppdet.modeling.heads.gfl_head.GFLHead"
#    params:
#      conv_feat: '**ppdet.modeling.heads.fcos_head.FCOSFeat()'
#      dgqp_module:
#      num_classes: 80
#      fpn_stride: [8, 16, 32, 64, 128]
#      prior_prob: 0.01
#      loss_class: '**ppdet.modeling.losses.gfocal_loss.QualityFocalLoss()'
#      loss_dfl: '**ppdet.modeling.losses.gfocal_loss.DistributionFocalLoss()'
#      loss_bbox: '**ppdet.modeling.iou_loss.losses.GIoULoss()'
#      reg_max: 16
#      feat_in_chan: 256
#      nms:
#      nms_pre: 1000
#      cell_offset: 0
#  DataGenerator:
#    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
#    data:
#      fpn_feats:
#        -
#          generate_way: "random"  # random, solid, load
#          type: "Tensor"
#          dtype: "float32"
#          shape: [8, 256, 8, 8]
#          range: [ -1, 1]
#        -
#          generate_way: "random"  # random, solid, load
#          type: "Tensor"
#          dtype: "float32"
#          shape: [8, 256, 16, 16]
#          range: [ -1, 1]
#        -
#          generate_way: "random"  # random, solid, load
#          type: "Tensor"
#          dtype: "float32"
#          shape: [8, 256, 32, 32]
#          range: [ -1, 1]
#        -
#          generate_way: "random"  # random, solid, load
#          type: "Tensor"
#          dtype: "float32"
#          shape: [8, 256, 64, 64]
#          range: [ -1, 1]
#        -
#          generate_way: "random"  # random, solid, load
#          type: "Tensor"
#          dtype: "float32"
#          shape: [8, 256, 128, 128]
#          range: [ -1, 1]
#  Loss:
#    loss_name: "diy.loss.diy_loss.naive_loss_list"
#    params:
#      loss_list: ['logit[0][0]']
#  optimizer:
#    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
#    params:
#      opt_api: "paddle.optimizer.SGD"
#      learning_rate: 0.00001
#  Train:
#    step: 3
#  test:
#    dygraph_to_static_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    dygraph_to_static_predict_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    dygraph_to_infer_predict_test:
#      acc_test: False
#      delta: 0.000001
#      rtol: 0.000001
##    dygraph_train_test:
##      delta: 0.00000001
##      rtol: 0.00000001
##    dygraph_predict_test:
##      delta: 0.00000001
##      rtol: 0.00000001
##    static_train_test:
##      delta: 0.00000001
##      rtol: 0.00000001
##    static_predict_test:
##      delta: 0.00000001
##      rtol: 0.00000001
