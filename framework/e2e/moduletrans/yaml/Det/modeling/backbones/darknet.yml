darknet_ConvBNLayer_0:
  desc: "Det ppdet.modeling.backbones.darknet.ConvBNLayer模型结构"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.darknet.ConvBNLayer"
    params:
      ch_in: 6
      ch_out: 9
      filter_size: 3
      stride: 2
      groups: 3
      padding: 1
      norm_type: 'bn'
      norm_decay: 0.001
      act: "relu"
      freeze_norm: False
      data_format: 'NCHW'
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      inputs:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float64"
        shape: [4, 6, 16, 16]
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
#    dygraph_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    build_dygraph_train_ground_truth:
#      mode: 'numpy'
#    dygraph_predict_test:
#      delta: 0.00000001
#      rtol: 0.00000001

darknet_DownSample_0:
  desc: "Det ppdet.modeling.backbones.darknet.DownSample模型结构"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.darknet.DownSample"
    params:
      ch_in: 5
      ch_out: 7
      filter_size: 5
      stride: 2
      padding: 1
      norm_type: 'bn'
      norm_decay: 0.0001
      freeze_norm: True
      data_format: 'NHWC'
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      inputs:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float64"
        shape: [4, 16, 16, 5]
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
#    dygraph_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    build_dygraph_train_ground_truth:
#      mode: 'numpy'
#    dygraph_predict_test:
#      delta: 0.00000001
#      rtol: 0.00000001

darknet_BasicBlock_0:
  desc: "Det ppdet.modeling.backbones.darknet.BasicBlock模型结构"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.darknet.BasicBlock"
    params:
      ch_in: 6
      ch_out: 6
      norm_type: 'bn'
      norm_decay: 0.00001
      freeze_norm: False
      data_format: 'NHWC'
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      inputs:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float64"
        shape: [7, 16, 16, 6]
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
#    dygraph_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    build_dygraph_train_ground_truth:
#      mode: 'numpy'
#    dygraph_predict_test:
#      delta: 0.00000001
#      rtol: 0.00000001

darknet_Blocks_0:
  desc: "Det ppdet.modeling.backbones.darknet.Blocks模型结构"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.darknet.Blocks"
    params:
      ch_in: 6
      ch_out: 6
      count: 2
      norm_type: 'bn'
      norm_decay: 0.00001
      freeze_norm: False
      data_format: 'NCHW'
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      inputs:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float64"
        shape: [3, 6, 16, 16]
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
#    dygraph_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    build_dygraph_train_ground_truth:
#      mode: 'numpy'
#    dygraph_predict_test:
#      delta: 0.00000001
#      rtol: 0.00000001

darknet_Blocks_1:
  desc: "Det ppdet.modeling.backbones.darknet.Blocks模型结构"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.darknet.Blocks"
    params:
      ch_in: 6
      ch_out: 6
      count: 2
      norm_type: 'bn'
      norm_decay: 0.00001
      freeze_norm: False
      data_format: 'NHWC'
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      inputs:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float64"
        shape: [3, 16, 16, 6]
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
#    dygraph_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    build_dygraph_train_ground_truth:
#      mode: 'numpy'
#    dygraph_predict_test:
#      delta: 0.00000001
#      rtol: 0.00000001

#darknet_DarkNet_0:
#  desc: "Det ppdet.modeling.backbones.darknet.DarkNet模型结构"
#  Layer:
#    repo: "PaddleDetection"
#    layer_name: "ppdet.modeling.backbones.darknet.DarkNet"
#    params:
#      depth: 53
#      freeze_at: -1
#      return_idx: [2, 3, 4]
#      num_stages: 5
#      norm_type: 'bn'
#      norm_decay: 0.
#      freeze_norm: False
#      data_format: 'NCHW'
#  DataGenerator:
#    DataGenerator_name: "diy.data.struct_img_dataset.DictImageWithoutLabel"
#    data:
#      inputs:
#        generate_way: "random"  # random, solid, load
#        type: "Tensor"
#        dtype: "float64"
#        shape: [4, 3, 224, 224]
#        range: [ -1, 1]
#  Loss:
#    loss_name: "diy.loss.diy_loss.naive_loss_list"
#    params:
#      loss_list: ['logit[0]']
#  optimizer:
#    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
#    params:
#      opt_api: "paddle.optimizer.SGD"
#      learning_rate: 0.000001
#  Train:
#    step: 3
#  test:
#    dygraph_to_static_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    dygraph_to_static_predict_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    dygraph_to_infer_predict_test:
#      acc_test: False
#      delta: 0.000001
#      rtol: 0.000001
##    dygraph_train_test:
##      delta: 0.00000001
##      rtol: 0.00000001
##    build_dygraph_train_ground_truth:
##      mode: 'numpy'
##    dygraph_predict_test:
##      delta: 0.00000001
##      rtol: 0.00000001
