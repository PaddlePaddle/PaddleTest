csp_darknet_BaseConv_0:
  desc: "Det ppdet.modeling.backbones.csp_darknet.BaseConv模型结构"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.csp_darknet.BaseConv"
    params:
      in_channels: 6
      out_channels: 9
      ksize: 3
      stride: 2
      groups: 3
      bias: False
      act: "silu"
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      x:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float64"
        shape: [4, 6, 16, 16]
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
    dygraph_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_predict_test:
      delta: 0.00000001
      rtol: 0.00000001

csp_darknet_DWConv_0:
  desc: "Det ppdet.modeling.backbones.csp_darknet.DWConv模型结构"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.csp_darknet.DWConv"
    params:
      in_channels: 5
      out_channels: 7
      ksize: 3
      stride: 2
      bias: True
      act: "silu"
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      x:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float64"
        shape: [5, 5, 16, 16]
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
    dygraph_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_predict_test:
      delta: 0.00000001
      rtol: 0.00000001

csp_darknet_Focus_0:
  desc: "Det ppdet.modeling.backbones.csp_darknet.Focus模型结构"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.csp_darknet.Focus"
    params:
      in_channels: 5
      out_channels: 7
      ksize: 3
      stride: 2
      bias: True
      act: "silu"
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      inputs:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float64"
        shape: [3, 5, 14, 14]  # [3, 5, 13, 13] 报错
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
    dygraph_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_predict_test:
      delta: 0.00000001
      rtol: 0.00000001

csp_darknet_BottleNeck_0:
  desc: "Det ppdet.modeling.backbones.csp_darknet.BottleNeck模型结构"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.csp_darknet.BottleNeck"
    params:
      in_channels: 5
      out_channels: 7
      shortcut: True
      expansion: 0.6
      depthwise: False
      bias: True
      act: "silu"
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      x:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float64"
        shape: [3, 5, 14, 14]  # [3, 5, 13, 13] 报错
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
    dygraph_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_predict_test:
      delta: 0.00000001
      rtol: 0.00000001

csp_darknet_SPPLayer_0:
  desc: "Det ppdet.modeling.backbones.csp_darknet.SPPLayer模型结构"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.csp_darknet.SPPLayer"
    params:
      in_channels: 5
      out_channels: 7
      kernel_sizes: !!python/tuple [5, 7, 9]
      bias: True
      act: "silu"
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      x:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float64"
        shape: [3, 5, 14, 14]  # [3, 5, 13, 13] 报错
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
    dygraph_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_predict_test:
      delta: 0.00000001
      rtol: 0.00000001

csp_darknet_SPPFLayer_0:
  desc: "Det ppdet.modeling.backbones.csp_darknet.SPPFLayer模型结构"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.csp_darknet.SPPFLayer"
    params:
      in_channels: 5
      out_channels: 7
      ksize: 3
      bias: True
      act: "silu"
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      x:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float64"
        shape: [3, 5, 14, 14]  # [3, 5, 13, 13] 报错
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
    dygraph_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_predict_test:
      delta: 0.00000001
      rtol: 0.00000001

csp_darknet_CSPLayer_0:
  desc: "Det ppdet.modeling.backbones.csp_darknet.CSPLayer模型结构"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.csp_darknet.CSPLayer"
    params:
      in_channels: 5
      out_channels: 7
      num_blocks: 2
      shortcut: True
      expansion: 0.55
      depthwise: False
      bias: True
      act: "silu"
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      x:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float64"
        shape: [3, 5, 32, 32]  # [3, 5, 13, 13] 报错
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
    dygraph_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_predict_test:
      delta: 0.00000001
      rtol: 0.00000001

csp_darknet_CSPDarkNet_0:
  desc: "Det ppdet.modeling.backbones.csp_darknet.CSPDarkNet模型结构"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.csp_darknet.CSPDarkNet"
    params:
      arch: 'X'
      depth_mult: 1.0
      width_mult: 1.0
      depthwise: False
      act: 'silu'
      trt: False
      return_idx: [2, 3, 4]
  DataGenerator:
    DataGenerator_name: "diy.data.struct_img_dataset.DictImageWithoutLabel"
    data:
      inputs:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float64"
        shape: [4, 3, 224, 224]
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit[0]']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.0000001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
#    dygraph_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    build_dygraph_train_ground_truth:
#      mode: 'numpy'
#    dygraph_predict_test:
#      delta: 0.00000001
#      rtol: 0.00000001
