swin_transformer_Mlp_0:
  desc: "Det swin_transformer.Blocks"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.swin_transformer.Mlp"
    params:
      in_features: 5
      hidden_features: 10
      out_features: 15
      drop: 0.3
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      x:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float32"
        shape: [4, 5]
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.000001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
#    dygraph_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    build_dygraph_train_ground_truth:
#      mode: 'numpy'
#    dygraph_predict_test:
#      delta: 0.00000001
#      rtol: 0.00000001

swin_transformer_WindowAttention_0:
  desc: "Det swin_transformer.Blocks"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.swin_transformer.WindowAttention"
    params:
      dim: 8
      window_size: !!python/tuple [32, 32]
      num_heads: 2
      qkv_bias: True
      qk_scale: 0.03
      attn_drop: 0.01
      proj_drop: 0.01
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      x:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float32"
        shape: [4, 1024, 8]
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.000001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
#    dygraph_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    build_dygraph_train_ground_truth:
#      mode: 'numpy'
#    dygraph_predict_test:
#      delta: 0.00000001
#      rtol: 0.00000001

#swin_transformer_SwinTransformerBlock_0:
#  desc: "Det swin_transformer.Blocks"
#  Layer:
#    repo: "PaddleDetection"
#    layer_name: "ppdet.modeling.backbones.swin_transformer.SwinTransformerBlock"
#    params:
#      dim: 8
#      num_heads: 2
#      window_size: 5
#      shift_size: 0
#      mlp_ratio: 4.
#      qkv_bias: True
#      qk_scale: 0.02
#      drop: 0.
#      attn_drop: 0.01
#      drop_path: 0.01
#  DataGenerator:
#    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
#    data:
#      x:
#        generate_way: "random"  # random, solid, load
#        type: "Tensor"
#        dtype: "float32"
#        shape: [4, 25, 8]
#        range: [ -1, 1]
#      mask_matrix:
#        generate_way: "random"  # random, solid, load
#        type: "Tensor"
#        dtype: "float32"
#        shape: [4, 25, 8]
#        range: [ -1, 1]
#  Loss:
#    loss_name: "diy.loss.diy_loss.naive_loss_list"
#    params:
#      loss_list: ['logit']
#  optimizer:
#    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
#    params:
#      opt_api: "paddle.optimizer.SGD"
#      learning_rate: 0.000001
#  Train:
#    step: 3
#  test:
#    dygraph_to_static_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    dygraph_to_static_predict_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    dygraph_to_infer_predict_test:
#      acc_test: False
#      delta: 0.000001
#      rtol: 0.000001
##    dygraph_train_test:
##      delta: 0.00000001
##      rtol: 0.00000001
##    build_dygraph_train_ground_truth:
##      mode: 'numpy'
##    dygraph_predict_test:
##      delta: 0.00000001
##      rtol: 0.00000001

swin_transformer_PatchMerging_0:
  desc: "Det swin_transformer.Blocks"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.swin_transformer.PatchMerging"
    params:
      dim: 16
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      x:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float32"
        shape: [4, 576, 16]
        range: [ -1, 1]
      H:
        generate_way: "solid"
        type: "int"
        dtype: "int32"
        value: 24
      W:
        generate_way: "solid"
        type: "int"
        dtype: "int32"
        value: 24
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
#    dygraph_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    build_dygraph_train_ground_truth:
#      mode: 'numpy'
#    dygraph_predict_test:
#      delta: 0.00000001
#      rtol: 0.00000001

swin_transformer_PatchEmbed_0:
  desc: "Det swin_transformer.Blocks"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.swin_transformer.PatchEmbed"
    params:
      patch_size: 4
      in_chans: 5
      embed_dim: 48
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      x:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float32"
        shape: [4, 5, 64, 64]
        range: [ -1, 1]
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_static_predict_test:
      delta: 0.00000001
      rtol: 0.00000001
    dygraph_to_infer_predict_test:
      acc_test: False
      delta: 0.000001
      rtol: 0.000001
#    dygraph_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    build_dygraph_train_ground_truth:
#      mode: 'numpy'
#    dygraph_predict_test:
#      delta: 0.00000001
#      rtol: 0.00000001

swin_transformer_BasicLayer_0:
  desc: "Det swin_transformer.Blocks"
  Layer:
    repo: "PaddleDetection"
    layer_name: "ppdet.modeling.backbones.swin_transformer.BasicLayer"
    params:
      dim: 16
      depth: 2
      num_heads: 4
  DataGenerator:
    DataGenerator_name: "diy.data.single_img_dataset.SingleImageWithoutLabel"
    data:
      x:
        generate_way: "random"  # random, solid, load
        type: "Tensor"
        dtype: "float32"
        shape: [4, 576, 16]
        range: [ -1, 1]
      H:
        generate_way: "solid"
        type: "int"
        dtype: "int32"
        value: 24
      W:
        generate_way: "solid"
        type: "int"
        dtype: "int32"
        value: 24
  Loss:
    loss_name: "diy.loss.diy_loss.naive_loss_list"
    params:
      loss_list: ['logit[0] + logit[3]']
  optimizer:
    optimizer_name: "diy.optimizer.diy_opt.naive_opt"
    params:
      opt_api: "paddle.optimizer.SGD"
      learning_rate: 0.00001
  Train:
    step: 3
  test:
    dygraph_to_static_train_test:
      delta: 0.00000001
      rtol: 0.00000001
#    dygraph_to_static_predict_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    dygraph_to_infer_predict_test:
#      acc_test: False
#      delta: 0.000001
#      rtol: 0.000001
#    dygraph_train_test:
#      delta: 0.00000001
#      rtol: 0.00000001
#    build_dygraph_train_ground_truth:
#      mode: 'numpy'
#    dygraph_predict_test:
#      delta: 0.00000001
#      rtol: 0.00000001
