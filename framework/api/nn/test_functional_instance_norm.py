#!/bin/env python
# -*- coding: utf-8 -*-
# encoding=utf-8 vi:ts=4:sw=4:expandtab:ft=python
"""
test instancenorm
"""
from apibase import APIBase
from apibase import randtool
import paddle
import pytest
import numpy as np


class TestInstanceNorm(APIBase):
    """
    test
    """

    def hook(self):
        """
        implement
        """
        self.types = [np.float32, np.float64]
        # self.debug = True
        # self.static = True
        # enable check grad
        self.enable_backward = True


obj = TestInstanceNorm(paddle.nn.functional.instance_norm)


@pytest.mark.api_nn_instance_norm_vartype
def test_instancenorm_base():
    """
    input_shape=(2,1,2,3)
    """
    x_data = np.array(
        [
            [
                [[0.6964692, 0.28613934, 0.22685145], [0.5513148, 0.71946895, 0.42310646]],
                [[0.9807642, 0.6848297, 0.4809319], [0.39211753, 0.343178, 0.7290497]],
            ],
            [
                [[0.43857226, 0.0596779, 0.39804426], [0.7379954, 0.18249173, 0.17545176]],
                [[0.53155136, 0.53182757, 0.63440096], [0.8494318, 0.7244553, 0.6110235]],
            ],
        ]
    )

    res = [
        [
            [[1.12517862, -1.04670874, -1.36052119], [0.35687234, 1.24691693, -0.32173797]],
            [[1.71713402, 0.37617603, -0.54773918], [-0.95018073, -1.17193877, 0.57654862]],
        ],
        [
            [[0.47514178, -1.21473747, 0.29438578], [1.8105772, -0.66698442, -0.69838288]],
            [[-1.03305501, -1.03058589, -0.11365493], [1.80856324, 0.69136489, -0.3226323]],
        ],
    ]

    obj.base(res=res, x=x_data)


@pytest.mark.api_nn_instance_norm_parameters
def test_instancenorm1():
    """
    input_shape=(2,1,2,3)
    """
    x_data = np.array(
        [
            [
                [[0.6964692, 0.28613934, 0.22685145], [0.5513148, 0.71946895, 0.42310646]],
                [[0.9807642, 0.6848297, 0.4809319], [0.39211753, 0.343178, 0.7290497]],
            ],
            [
                [[0.43857226, 0.0596779, 0.39804426], [0.7379954, 0.18249173, 0.17545176]],
                [[0.53155136, 0.53182757, 0.63440096], [0.8494318, 0.7244553, 0.6110235]],
            ],
        ]
    )

    res = [
        [
            [[1.12517862, -1.04670874, -1.36052119], [0.35687234, 1.24691693, -0.32173797]],
            [[1.71713402, 0.37617603, -0.54773918], [-0.95018073, -1.17193877, 0.57654862]],
        ],
        [
            [[0.47514178, -1.21473747, 0.29438578], [1.8105772, -0.66698442, -0.69838288]],
            [[-1.03305501, -1.03058589, -0.11365493], [1.80856324, 0.69136489, -0.3226323]],
        ],
    ]

    obj.run(res=res, x=x_data)


@pytest.mark.api_nn_instance_norm_parameters
def test_instancenorm2():
    """
    input_shape=(2,1,2,3), epsilon<=1e-3
    """
    x_data = np.array(
        [
            [
                [[0.6964692, 0.28613934, 0.22685145], [0.5513148, 0.71946895, 0.42310646]],
                [[0.9807642, 0.6848297, 0.4809319], [0.39211753, 0.343178, 0.7290497]],
            ],
            [
                [[0.43857226, 0.0596779, 0.39804426], [0.7379954, 0.18249173, 0.17545176]],
                [[0.53155136, 0.53182757, 0.63440096], [0.8494318, 0.7244553, 0.6110235]],
            ],
        ]
    )

    res = [
        [
            [[1.12517862, -1.04670874, -1.36052119], [0.35687234, 1.24691693, -0.32173797]],
            [[1.71713402, 0.37617603, -0.54773918], [-0.95018073, -1.17193877, 0.57654862]],
        ],
        [
            [[0.47514178, -1.21473747, 0.29438578], [1.8105772, -0.66698442, -0.69838288]],
            [[-1.03305501, -1.03058589, -0.11365493], [1.80856324, 0.69136489, -0.3226323]],
        ],
    ]

    obj.run(res=res, x=x_data)


@pytest.mark.api_nn_instance_norm_parameters
def test_instancenorm3():
    """
    input_shape=(2,1,2,3), epsilon<=1e-3, weight=None, bias=None, data_format='NCHW'
    """
    x_data = np.array(
        [
            [
                [[0.6964692, 0.28613934, 0.22685145], [0.5513148, 0.71946895, 0.42310646]],
                [[0.9807642, 0.6848297, 0.4809319], [0.39211753, 0.343178, 0.7290497]],
            ],
            [
                [[0.43857226, 0.0596779, 0.39804426], [0.7379954, 0.18249173, 0.17545176]],
                [[0.53155136, 0.53182757, 0.63440096], [0.8494318, 0.7244553, 0.6110235]],
            ],
        ]
    )

    res = [
        [
            [[1.12517862, -1.04670874, -1.36052119], [0.35687234, 1.24691693, -0.32173797]],
            [[1.71713402, 0.37617603, -0.54773918], [-0.95018073, -1.17193877, 0.57654862]],
        ],
        [
            [[0.47514178, -1.21473747, 0.29438578], [1.8105772, -0.66698442, -0.69838288]],
            [[-1.03305501, -1.03058589, -0.11365493], [1.80856324, 0.69136489, -0.3226323]],
        ],
    ]

    obj.run(res=res, x=x_data, weight=None, bias=None, data_format="NCHW")


@pytest.mark.api_nn_instance_norm_parameters
def test_instancenorm4():
    """
    input_shape=(2,1,2,3), epsilon<=1e-3, weight=None, bias=None, data_format='NCHW', use_input_stats=True
    """
    x_data = np.array(
        [
            [
                [[0.6964692, 0.28613934, 0.22685145], [0.5513148, 0.71946895, 0.42310646]],
                [[0.9807642, 0.6848297, 0.4809319], [0.39211753, 0.343178, 0.7290497]],
            ],
            [
                [[0.43857226, 0.0596779, 0.39804426], [0.7379954, 0.18249173, 0.17545176]],
                [[0.53155136, 0.53182757, 0.63440096], [0.8494318, 0.7244553, 0.6110235]],
            ],
        ]
    )

    res = [
        [
            [[1.12517862, -1.04670874, -1.36052119], [0.35687234, 1.24691693, -0.32173797]],
            [[1.71713402, 0.37617603, -0.54773918], [-0.95018073, -1.17193877, 0.57654862]],
        ],
        [
            [[0.47514178, -1.21473747, 0.29438578], [1.8105772, -0.66698442, -0.69838288]],
            [[-1.03305501, -1.03058589, -0.11365493], [1.80856324, 0.69136489, -0.3226323]],
        ],
    ]

    obj.run(res=res, x=x_data, weight=None, bias=None, data_format="NCHW", use_input_stats=True)


@pytest.mark.api_nn_instance_norm_parameters
def test_instancenorm5():
    """
    input_shape=(2,1,3)
    """
    x_data = np.array([[[0.6964692, 0.28613934, 0.22685145]], [[0.5513148, 0.71946895, 0.42310646]]])

    res = [[[1.4045197, -0.5603124, -0.8442078]], [[-0.10968472, 1.2754805, -1.165797]]]

    obj.run(res=res, x=x_data)


# test frame get result = 0, but paddle frame this api is ok.
# def test_instancenorm6():
#     """
#     input_shape=(2,3)
#     """
#     x_data = np.array([[0.6964692, 0.28613934],
#                        [0.22685145, 0.5513148],
#                        [0.71946895, 0.42310646]])
#
#     res = [[-3.3516517e-06,  1.2182545e-06],
#            [-1.1272382e-06, -2.8244085e-06],
#            [-2.6730959e-06, 1.3997769e-06]]
#
#     obj.run(res=res, x=x_data)
