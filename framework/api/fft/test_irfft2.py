#!/bin/env python
# -*- coding: utf-8 -*-
# encoding=utf-8 vi:ts=4:sw=4:expandtab:ft=python
"""
test_irfft2
"""

from apibase import APIBase
import paddle
import pytest
import numpy as np


class TestFFtirfft2(APIBase):
    """
    test
    """

    def hook(self):
        """
        implement
        """
        self.types = [np.complex128, np.complex64]
        # self.debug = True
        # self.static = True
        # enable check grad
        self.enable_backward = False
        # self.delta = 1e-5


obj = TestFFtirfft2(paddle.fft.irfft2)


@pytest.mark.api_fft_irfft2_vartype
def test_irfft2_base():
    """
    base
    """
    np.random.seed(33)
    x = (np.random.rand(3, 4) * 4 - 2) * 1j + np.random.rand(3, 4)
    res = np.array(
        [
            [0.43439982, 0.18637397, 0.15977006, 0.01624588, -0.05117493, -0.1852606],
            [0.29283943, -0.12729332, -0.48005854, 0.20427517, -0.25149344, -0.09799707],
            [-0.37843765, -0.0177867, 0.36649549, -0.43371335, 0.43902196, 0.0033514],
        ]
    )
    obj.base(res=res, x=x)


@pytest.mark.api_fft_irfft2_parameters
def test_irfft2_0():
    """
    default
    x: tensor-3d
    """
    np.random.seed(33)
    x_data = (np.random.rand(3, 4, 5) * 4 - 2) * 1j + np.random.rand(3, 4, 5) * 10
    res = np.array(
        [
            [
                [5.7767221, 0.47138298, -0.17560212, 0.6178334, -0.59143723, 0.44979845, -0.15032881, 0.24116191],
                [-0.99700362, 0.37144919, 0.2833766, -0.77962787, -0.01818691, 0.70084734, 0.55352125, 0.59349568],
                [0.24244031, 0.51038452, -0.27966532, 0.1044083, 0.12057055, 0.39662915, -0.07327158, -0.15421176],
                [-1.24885449, -0.17155617, 0.0593772, 1.07360454, 0.31143742, -0.76267104, -0.06308303, -0.08663656],
            ],
            [
                [5.57481212, -0.25732146, 0.47593736, 0.42094355, 0.04331863, 0.71642335, 1.08094964, -0.58997791],
                [0.15684176, -0.33856885, 0.57503909, 0.28240655, 0.08923778, -0.14205363, -0.98036617, -0.1685629],
                [-0.52838514, -0.39994077, 0.29016223, 1.05127379, 0.47962029, 0.28250134, 0.28056215, -0.23991493],
                [0.42388609, 0.11644517, -0.7618073, 0.17223907, -0.34557445, -0.03793126, 0.4088247, -0.49773352],
            ],
            [
                [5.84964929, 0.23753356, 0.31308257, 0.17421634, 0.56674161, -0.09304024, 0.62830967, -0.08755742],
                [0.39842363, -0.03014677, 0.04918287, -0.03811424, -0.64615162, -0.13490416, -0.5565061, -0.42508507],
                [-1.02207726, -0.26091863, 0.49564093, 0.02428325, 0.0049903, -0.90339356, 0.15196227, -0.10530311],
                [0.53766923, -0.10624595, -0.80951987, -0.102538, -0.53865485, -0.11900647, 0.44283311, -0.00841697],
            ],
        ]
    )
    obj.run(res=res, x=x_data)


@pytest.mark.api_fft_irfft2_parameters
def test_irfft2_1():
    """
    default
    x: tensor-4d
    """
    np.random.seed(33)
    x = np.array(
        [
            [
                [
                    [
                        (-0.1224520962334954 + 0j),
                        (-1.209025178049993 + 0j),
                        (0.134883021602767 + 0j),
                        (-2.3890059729906854 + 0j),
                        (0.28628788327545696 + 0j),
                    ],
                    [
                        (-2.934969373557615 + 0j),
                        (-0.10746511904332046 + 0j),
                        (0.035961204583530026 + 0j),
                        (1.119949152745897 + 0j),
                        (0.8383430281760411 + 0j),
                    ],
                    [
                        (3.7412661569231043 + 0j),
                        (0.85987278613521 + 0j),
                        (-1.5715654450949788 + 0j),
                        (-1.2684633841701447 + 0j),
                        (-1.9295305672164234 + 0j),
                    ],
                    [
                        (0.24878848916707952 + 0j),
                        (1.7461702585625098 + 0j),
                        (-1.3605682759947912 + 0j),
                        (-1.2152117113625214 + 0j),
                        (1.1675997926696091 + 0j),
                    ],
                ],
                [
                    [
                        (-1.8894668842646651 + 0j),
                        (0.8088285464563567 + 0j),
                        (-0.8473565976304407 + 0j),
                        (0.4714035000858843 + 0j),
                        (2.676877623500139 + 0j),
                    ],
                    [
                        (0.41528879085285464 + 0j),
                        (-3.7352434775163275 + 0j),
                        (3.5900550474461665 + 0j),
                        (0.3236572851024171 + 0j),
                        (-0.9456380157718183 + 0j),
                    ],
                    [
                        (-0.021051597995471738 + 0j),
                        (-1.712682873162143 + 0j),
                        (-1.7919739846098675 + 0j),
                        (0.07972277948051465 + 0j),
                        (-0.7613881319428146 + 0j),
                    ],
                    [
                        (3.6165460791041015 + 0j),
                        (1.298855215159421 + 0j),
                        (1.3130760208872987 + 0j),
                        (0.42288564031034914 + 0j),
                        (-1.5572680885995034 + 0j),
                    ],
                ],
            ],
            [
                [
                    [
                        (0.6080898983845997 + 0j),
                        (-0.6386925764289781 + 0j),
                        (-0.4159758981823174 + 0j),
                        (2.028526211935032 + 0j),
                        (1.8948177783857671 + 0j),
                    ],
                    [
                        (1.015784005476656 + 0j),
                        (-0.8234739057717277 + 0j),
                        (0.9625801850537941 + 0j),
                        (3.101246446070145 + 0j),
                        (1.0326825510281212 + 0j),
                    ],
                    [
                        (3.1159771702949675 + 0j),
                        (-2.2479430825479283 + 0j),
                        (-1.7823736869942608 + 0j),
                        (-1.0949654526578168 + 0j),
                        (1.8775578257484478 + 0j),
                    ],
                    [
                        (3.346582033838105 + 0j),
                        (2.8455962415184333 + 0j),
                        (0.49375725505900414 + 0j),
                        (-0.5642101436619926 + 0j),
                        (1.6134716481000893 + 0j),
                    ],
                ],
                [
                    [
                        (1.4985392000816264 + 0j),
                        (-1.9699541999741754 + 0j),
                        (0.035540203943130955 + 0j),
                        (1.1570047199349722 + 0j),
                        (-0.38055281185573 + 0j),
                    ],
                    [
                        (-2.7280239754229707 + 0j),
                        (0.19038182319576347 + 0j),
                        (-0.41921420699234035 + 0j),
                        (0.639806238670225 + 0j),
                        (-0.5469986197771082 + 0j),
                    ],
                    [
                        (0.6669365202292035 + 0j),
                        (-0.3841311772818643 + 0j),
                        (-0.3303833862134593 + 0j),
                        (1.6253173691449967 + 0j),
                        (-0.6510382905230543 + 0j),
                    ],
                    [
                        (0.3643880789319742 + 0j),
                        (0.2382089450842173 + 0j),
                        (-1.547950481741378 + 0j),
                        (-0.7011591265866342 + 0j),
                        (1.1919006419650935 + 0j),
                    ],
                ],
            ],
            [
                [
                    [
                        (0.15080158104487884 + 0j),
                        (-1.876652800304889 + 0j),
                        (0.8767296206229136 + 0j),
                        (1.4009196879470962 + 0j),
                        (0.02404409844641897 + 0j),
                    ],
                    [
                        (1.4660689678913403 + 0j),
                        (0.8278344591246194 + 0j),
                        (-1.98946267892457 + 0j),
                        (-0.33281137417657725 + 0j),
                        (-2.9325043054082816 + 0j),
                    ],
                    [
                        (-2.562943584562459 + 0j),
                        (0.4948858170066197 + 0j),
                        (0.04988726303055424 + 0j),
                        (-1.0549529565702915 + 0j),
                        (-0.9811163550486541 + 0j),
                    ],
                    [
                        (1.5150771633679745 + 0j),
                        (3.0258423272432635 + 0j),
                        (-2.0938506987684526 + 0j),
                        (-1.3075412578988574 + 0j),
                        (1.905112403982542 + 0j),
                    ],
                ],
                [
                    [
                        (-2.1876553391437903 + 0j),
                        (1.1253681811652063 + 0j),
                        (1.7638218091935323 + 0j),
                        (2.093557543402684 + 0j),
                        (0.6068456448192387 + 0j),
                    ],
                    [
                        (0.9587003131785243 + 0j),
                        (-0.2855219770632118 + 0j),
                        (0.831272610847813 + 0j),
                        (2.032187779071802 + 0j),
                        (0.6711645585950734 + 0j),
                    ],
                    [
                        (0.3611307341635164 + 0j),
                        (-1.75682451302524 + 0j),
                        (-1.1194285606333287 + 0j),
                        (0.2750163753429602 + 0j),
                        (-0.33335985111245003 + 0j),
                    ],
                    [
                        (-2.096521597977167 + 0j),
                        (-0.1762722839254831 + 0j),
                        (-1.5173750349100095 + 0j),
                        (-1.527061091367723 + 0j),
                        (-0.7153956885664248 + 0j),
                    ],
                ],
            ],
        ]
    )
    res = np.array(
        [
            [
                [
                    [-0.28605013, 0.24065001, 0.21305976, -0.2050292, 0.02184727, -0.2050292, 0.21305976, 0.24065001],
                    [
                        -0.14418387,
                        -0.34046102,
                        0.10364987,
                        -0.08207127,
                        0.25449619,
                        -0.21407621,
                        -0.41994966,
                        -0.12333359,
                    ],
                    [-0.27088969, 0.3806452, 0.08999875, 0.24149107, 0.42286836, 0.24149107, 0.08999875, 0.3806452],
                    [
                        -0.14418387,
                        -0.12333359,
                        -0.41994966,
                        -0.21407621,
                        0.25449619,
                        -0.08207127,
                        0.10364987,
                        -0.34046102,
                    ],
                ],
                [
                    [
                        0.06176106,
                        -0.12032077,
                        -0.09355316,
                        0.28961659,
                        0.31708273,
                        0.28961659,
                        -0.09355316,
                        -0.12032077,
                    ],
                    [
                        0.29017092,
                        0.01284428,
                        0.29844864,
                        0.10921445,
                        -0.07397809,
                        -0.62913423,
                        -0.31841016,
                        -0.15625963,
                    ],
                    [
                        -0.4354577,
                        -0.24740806,
                        0.42378017,
                        -0.40013875,
                        -0.60259736,
                        -0.40013875,
                        0.42378017,
                        -0.24740806,
                    ],
                    [
                        0.29017092,
                        -0.15625963,
                        -0.31841016,
                        -0.62913423,
                        -0.07397809,
                        0.10921445,
                        0.29844864,
                        0.01284428,
                    ],
                ],
            ],
            [
                [
                    [0.56978457, -0.13946464, 0.49965585, 0.2437086, 0.2440241, 0.2437086, 0.49965585, -0.13946464],
                    [
                        0.30336414,
                        -0.17497322,
                        0.29517596,
                        0.01747092,
                        -0.28822863,
                        -0.04145135,
                        -0.62163989,
                        -0.11668975,
                    ],
                    [-0.62018496, -0.20121549, 0.24366552, 0.09093297, 0.19384423, 0.09093297, 0.24366552, -0.20121549],
                    [
                        0.30336414,
                        -0.11668975,
                        -0.62163989,
                        -0.04145135,
                        -0.28822863,
                        0.01747092,
                        0.29517596,
                        -0.17497322,
                    ],
                ],
                [
                    [-0.10993487, -0.1994551, 0.12309895, 0.21123816, -0.20936919, 0.21123816, 0.12309895, -0.1994551],
                    [-0.071073, -0.15954773, 0.09836956, 0.0803192, 0.18569396, 0.05352552, -0.0752295, 0.09584266],
                    [0.19747685, -0.05472679, -0.01537577, 0.44257709, 0.189852, 0.44257709, -0.01537577, -0.05472679],
                    [-0.071073, 0.09584266, -0.0752295, 0.05352552, 0.18569396, 0.0803192, 0.09836956, -0.15954773],
                ],
            ],
            [
                [
                    [-0.16793141, 0.24624421, 0.1530604, -0.08665244, -0.3151219, -0.08665244, 0.1530604, 0.24624421],
                    [0.17316432, -0.11241267, 0.26283426, 0.32732274, 0.16262257, 0.20615071, -0.13375796, -0.20748769],
                    [-0.0562924, -0.4898976, -0.47946341, 0.14842211, 0.34984815, 0.14842211, -0.47946341, -0.4898976],
                    [0.17316432, -0.20748769, -0.13375796, 0.20615071, 0.16262257, 0.32732274, 0.26283426, -0.11241267],
                ],
                [
                    [
                        0.0231997,
                        -0.27511615,
                        -0.08286478,
                        0.07551611,
                        -0.19935655,
                        0.07551611,
                        -0.08286478,
                        -0.27511615,
                    ],
                    [
                        0.42373087,
                        -0.36128413,
                        -0.00119013,
                        -0.16171757,
                        -0.16386086,
                        -0.1503588,
                        -0.45975245,
                        0.23723656,
                    ],
                    [0.17742423, -0.12130222, -0.0947493, 0.05840095, -0.03429892, 0.05840095, -0.0947493, -0.12130222],
                    [
                        0.42373087,
                        0.23723656,
                        -0.45975245,
                        -0.1503588,
                        -0.16386086,
                        -0.16171757,
                        -0.00119013,
                        -0.36128413,
                    ],
                ],
            ],
        ]
    )
    obj.run(res=res, x=x)


@pytest.mark.api_fft_irfft2_parameters
def test_irfft2_2():
    """
    default
    x: tensor-3d
    s = (1, 2)
    """
    np.random.seed(33)
    x_data = np.array(
        [
            [[(-1.2060578060458984 + 0j), (-0.8058611744522621 + 0j)]],
            [[(1.4987666093072192 + 0j), (1.5462588644147117 + 0j)]],
            [[(-0.5638888120678853 + 0j), (0.784297351582774 + 0j)]],
        ]
    )

    res = np.array([[[-1.00595949, -0.20009832]], [[1.52251274, -0.02374613]], [[0.11020427, -0.67409308]]])
    obj.run(res=res, x=x_data, s=(1, 2))


@pytest.mark.api_fft_irfft2_parameters
def test_irfft2_3():
    """
    default
    x: tensor-3d
    s = (1, 2)
    axes=(0, 2)
    """
    np.random.seed(33)
    x_data = np.array(
        [
            [
                [(-1.2060578060458984 + 0j), (-0.8058611744522621 + 0j)],
                [(0.2217424620354178 + 0j), (2.741423044740178 + 0j)],
                [(0.6681557251262684 + 0j), (0.7754507127220456 + 0j)],
                [(-2.276140017197238 + 0j), (-1.087399412507608 + 0j)],
            ]
        ]
    )
    res = np.array(
        [[[-1.00595949, -0.20009832], [1.48158275, -1.25984029], [0.72180322, -0.05364749], [-1.68176971, -0.5943703]]]
    )
    obj.run(res=res, x=x_data, s=(1, 2), axes=(0, 2))


@pytest.mark.api_fft_irfft2_parameters
def test_irfft2_4():
    """
    default
    x: tensor-3d
    s = (1, 2)
    axes=(0, 2)
    norm = 'forward'
    """
    x_data = np.array(
        [
            [
                [(-1.2060578060458984 + 0j), (-0.8058611744522621 + 0j)],
                [(0.2217424620354178 + 0j), (2.741423044740178 + 0j)],
                [(0.6681557251262684 + 0j), (0.7754507127220456 + 0j)],
                [(-2.276140017197238 + 0j), (-1.087399412507608 + 0j)],
            ]
        ]
    )
    res = np.array(
        [[[-2.01191898, -0.40019663], [2.96316551, -2.51968058], [1.44360644, -0.10729499], [-3.36353943, -1.1887406]]]
    )
    obj.run(res=res, x=x_data, s=(1, 2), axes=(0, 2), norm="forward")


@pytest.mark.api_fft_irfft2_parameters
def test_irfft2_5():
    """
    default
    x: tensor-3d
    s = (1, 2)
    axes=(0, 2)
    norm = 'ortho'
    """
    np.random.seed(33)
    x_data = np.array(
        [
            [
                [(-1.2060578060458984 + 0j), (-0.8058611744522621 + 0j)],
                [(0.2217424620354178 + 0j), (2.741423044740178 + 0j)],
                [(0.6681557251262684 + 0j), (0.7754507127220456 + 0j)],
                [(-2.276140017197238 + 0j), (-1.087399412507608 + 0j)],
            ]
        ]
    )
    res = np.array(
        [[[-1.42264155, -0.28298175], [2.09527442, -1.78168323], [1.0207839, -0.07586901], [-2.37838154, -0.84056654]]]
    )
    obj.run(res=res, x=x_data, s=(1, 2), axes=(0, 2), norm="ortho")
