#!/bin/env python
# -*- coding: utf-8 -*-
# encoding=utf-8 vi:ts=4:sw=4:expandtab:ft=python
"""
test_ihfft
"""

from apibase import APIBase
import paddle
import pytest
import numpy as np


class TestFFtihfft(APIBase):
    """
    test
    """

    def hook(self):
        """
        implement
        """
        self.types = [np.float64, np.float32]
        # self.debug = True
        # self.static = True
        # enable check grad
        self.enable_backward = False
        # self.delta = 1e-5


obj = TestFFtihfft(paddle.fft.ihfft)


@pytest.mark.api_fft_ihfft_vartype
def test_ihfft_base():
    """
    base
    """
    np.random.seed(33)
    x = np.random.rand(4) * 10 - 5
    res = np.array(
        [(-1.575684894070085 + 0j), (-0.4060766888970272 + 0.4741893254097389j), (-0.12706045375856145 + 0j)]
    )
    obj.base(res=res, x=x)


@pytest.mark.api_fft_ihfft_parameters
def test_ihfft0():
    """
    default
    x: tensor-2d
    """
    np.random.seed(33)
    x_data = np.random.rand(4, 3) * 10 - 5
    res = np.array(
        [
            [(-1.301912161716446 + 0j), (-0.6064932819531272 + 0.11268323620669068j)],
            [(-0.6142156453474855 + 0j), (-0.8913937228917579 + 1.9784516660542313j)],
            [(0.5112142055493181 + 0j), (-2.6572999756244386 + 0.7875093085623142j)],
            [(1.1500456184603842 + 0j), (-0.6420821764775531 + 1.6501481314704132j)],
        ]
    )
    obj.run(res=res, x=x_data)


@pytest.mark.api_fft_ihfft_parameters
def test_ihfft1():
    """
    default
    x: tensor-3d
    """
    np.random.seed(33)
    x_data = np.random.rand(4, 3, 3) * 10 - 5
    res = np.array(
        [
            [
                [(-1.301912161716446 + 0j), (-0.6064932819531272 + 0.11268323620669068j)],
                [(-0.6142156453474855 + 0j), (-0.8913937228917579 + 1.9784516660542313j)],
                [(0.5112142055493181 + 0j), (-2.6572999756244386 + 0.7875093085623142j)],
            ],
            [
                [(1.1500456184603842 + 0j), (-0.6420821764775531 + 1.6501481314704132j)],
                [(-3.0179994723140475 + 0j), (-0.5932124074085051 + 0.5420518295079918j)],
                [(2.859528244535675 + 0j), (0.9860699829016509 + 1.1159162145083485j)],
            ],
            [
                [(0.24375850877045951 + 0j), (-0.6170830487928375 - 0.7782259744260203j)],
                [(-1.623343157645713 + 0j), (-0.44948699899361194 + 1.3865965549039505j)],
                [(-0.8804456442342266 + 0j), (-1.0538957655233128 - 2.517982040563634j)],
            ],
            [
                [(-0.4057587213630403 + 0j), (-2.018429291107627 - 0.3564016323843835j)],
                [(2.731367480721174 + 0j), (0.9857648564635226 + 0.8487579829875054j)],
                [(-2.451702578692204 + 0j), (0.38323493706443995 + 0.7937177510365636j)],
            ],
        ]
    )
    obj.run(res=res, x=x_data)


@pytest.mark.api_fft_ihfft_parameters
def test_ihfft2():
    """
    default
    x: tensor-4d
    """
    np.random.seed(33)
    x_data = np.random.rand(2, 4, 3, 3) * 10 - 5
    res = np.array(
        [
            [
                [
                    [(-1.301912161716446 + 0j), (-0.6064932819531272 + 0.11268323620669068j)],
                    [(-0.6142156453474855 + 0j), (-0.8913937228917579 + 1.9784516660542313j)],
                    [(0.5112142055493181 + 0j), (-2.6572999756244386 + 0.7875093085623142j)],
                ],
                [
                    [(1.1500456184603842 + 0j), (-0.6420821764775531 + 1.6501481314704132j)],
                    [(-3.0179994723140475 + 0j), (-0.5932124074085051 + 0.5420518295079918j)],
                    [(2.859528244535675 + 0j), (0.9860699829016509 + 1.1159162145083485j)],
                ],
                [
                    [(0.24375850877045951 + 0j), (-0.6170830487928375 - 0.7782259744260203j)],
                    [(-1.623343157645713 + 0j), (-0.44948699899361194 + 1.3865965549039505j)],
                    [(-0.8804456442342266 + 0j), (-1.0538957655233128 - 2.517982040563634j)],
                ],
                [
                    [(-0.4057587213630403 + 0j), (-2.018429291107627 - 0.3564016323843835j)],
                    [(2.731367480721174 + 0j), (0.9857648564635226 + 0.8487579829875054j)],
                    [(-2.451702578692204 + 0j), (0.38323493706443995 + 0.7937177510365636j)],
                ],
            ],
            [
                [
                    [(-1.6101777521466132 + 0j), (1.0846607782002369 - 0.3736708172343984j)],
                    [(0.14661490698327664 + 0j), (1.6297349723015568 + 0.06278116033306844j)],
                    [(-0.9516754607013272 + 0j), (1.5278464514333217 - 1.2721339137104053j)],
                ],
                [
                    [(0.8201239634658402 + 0j), (0.74782113129482 + 1.5356679485627955j)],
                    [(-1.5380586547173265 + 0j), (-0.19998544508919527 - 1.32526736332771j)],
                    [(-0.1165908899736315 + 0j), (-1.6288602226151554 + 0.8723778795554287j)],
                ],
                [
                    [(-1.4295479891764482 + 0j), (-1.4877543790844743 - 0.6579187083711221j)],
                    [(-2.6497934788104214 + 0j), (-0.23414404413522655 + 0.9783397683722087j)],
                    [(-0.09977938552576877 + 0j), (1.2130418680760102 + 0.14192124528924538j)],
                ],
                [
                    [(-2.057927472709498 + 0j), (0.5133874147500663 - 1.3019045650943006j)],
                    [(1.3309146401921297 + 0j), (1.3007952658839106 - 1.9713482077233426j)],
                    [(1.259344830899596 + 0j), (-1.754330931115731 - 0.1884185223819044j)],
                ],
            ],
        ]
    )
    obj.run(res=res, x=x_data)


@pytest.mark.api_fft_ihfft_parameters
def test_ihfft3():
    """
    default
    x: tensor-4d
    n=2
    """
    np.random.seed(33)
    x_data = np.random.rand(2, 4, 3, 3) * 10 - 5
    res = np.array(
        [
            [
                [
                    [(-1.5075722575573731 + 0j), (-1.0073264680653276 + 0j)],
                    [(0.6534768961692468 + 0j), (-3.050479987300248 + 0j)],
                    [(-0.13543271533121892 + 0j), (-4.6679530303683405 + 0j)],
                ],
                [
                    [(2.2580747320824095 + 0j), (-2.3921934665771314 + 0j)],
                    [(-2.845175021496548 + 0j), (-1.35924926563451 + 0j)],
                    [(4.318975026245695 + 0j), (0.5126931840932816 + 0j)],
                ],
                [
                    [(-0.7387464793637917 + 0j), (-0.25166110945142384 + 0j)],
                    [(-0.6472588157957135 + 0j), (-1.8750583398372234 + 0j)],
                    [(-3.5880299403969698 + 0j), (0.5997927651161172 + 0j)],
                ],
                [
                    [(-1.7236262345119728 + 0j), (-2.7189910690663224 + 0j)],
                    [(3.9592958838849555 + 0j), (0.7436013097632639 + 0j)],
                    [(-1.5727053743276675 + 0j), (-0.11252733023565664 + 0j)],
                ],
            ],
            [
                [
                    [(-1.391455783424376 + 0j), (1.9505995876782365 + 0j)],
                    [(1.0158524728615563 + 0j), (2.3902323787248343 + 0j)],
                    [(-1.2894525212735983 + 0j), (3.393469963438915 + 0j)],
                ],
                [
                    [(2.523961984346166 + 0j), (-0.2081957582906857 + 0j)],
                    [(-2.785766580710143 + 0j), (0.8477370358144256 + 0j)],
                    [(-0.1755195958866067 + 0j), (-3.1987917393173357 + 0j)],
                ],
                [
                    [(-2.743199493793123 + 0j), (-1.6618572535522742 + 0j)],
                    [(-1.9195984079351187 + 0j), (-1.198483159145756 + 0j)],
                    [(0.6296489522694455 + 0j), (1.6966553983568065 + 0j)],
                ],
                [
                    [(-2.9287161920090607 + 0j), (1.8975635487996954 + 0j)],
                    [(0.2740746455407477 + 0j), (3.6584305264192034 + 0j)],
                    [(0.21900413841547461 + 0j), (-2.46832116974734 + 0j)],
                ],
            ],
        ]
    )
    obj.run(res=res, x=x_data, n=2)


@pytest.mark.api_fft_ihfft_parameters
def test_ihfft4():
    """
    default
    x: tensor-4d
    n=2
    axis=1
    """
    np.random.seed(33)
    x_data = np.random.rand(2, 4, 3, 3) * 10 - 5
    res = np.array(
        [
            [
                [
                    [(-1.3245087300587113 + 0j), (2.0750112045837477 + 0j), (-0.9783022894091291 + 0j)],
                    [(-3.3007136891310296 + 0j), (1.1090155638037285 + 0j), (-3.2566245511649985 + 0j)],
                    [(0.014141232319708763 + 0j), (4.169401078594768 + 0j), (0.8725713642130133 + 0j)],
                ],
                [
                    [(-1.1903899955639894 + 0j), (-2.5752569940757932 + 0j), (0.08771031937453722 + 0j)],
                    [(0.9037105980000284 + 0j), (2.5949413196657662 + 0j), (0.10702382278404854 + 0j)],
                    [(-4.817526978019268 + 0j), (0.3631192364423539 + 0j), (0.931936683097379 + 0j)],
                ],
            ],
            [
                [
                    [(1.4374550151546703 + 0j), (-0.30494881423288045 + 0j), (-2.3175868839429494 + 0j)],
                    [(0.7340276533453367 + 0j), (-2.503941761193923 + 0j), (-0.3172515137524885 + 0j)],
                    [(-0.6351469465193129 + 0j), (-0.8298251706408921 + 0j), (-0.13742740885223315 + 0j)],
                ],
                [
                    [(-0.8783112109008098 + 0j), (-3.037106556869732 + 0j), (0.2699651943518615 + 0j)],
                    [(2.672057198241054 + 0j), (1.1295618553306452 + 0j), (-1.2746087110207942 + 0j)],
                    [(2.7391643886846295 + 0j), (-3.853097314071621 + 0j), (-0.13869393070455205 + 0j)],
                ],
            ],
        ]
    )
    obj.run(res=res, x=x_data, n=2, axis=1)


@pytest.mark.api_fft_ihfft_parameters
def test_ihfft5():
    """
    default
    x: tensor-2d
    norm = forward
    """
    np.random.seed(33)
    x_data = np.random.rand(2, 4) * 10 - 5
    res = np.array(
        [
            [(-6.30273957628034 + 0j), (-1.6243067555881088 + 1.8967573016389556j), (-0.5082418150342458 + 0j)],
            [(0.2834907244261067 + 0j), (8.507342629169054 - 7.682121043418071j), (-2.482348448886236 + 0j)],
        ]
    )
    obj.run(res=res, x=x_data, norm="forward")


@pytest.mark.api_fft_ihfft_parameters
def test_ihfft6():
    """
    default
    x: tensor-2d
    norm = ortho
    """
    np.random.seed(33)
    x_data = np.random.rand(2, 4) * 10 - 5
    res = np.array(
        [
            [(-3.15136978814017 + 0j), (-0.8121533777940544 + 0.9483786508194778j), (-0.2541209075171229 + 0j)],
            [(0.14174536221305334 + 0j), (4.253671314584527 - 3.8410605217090357j), (-1.241174224443118 + 0j)],
        ]
    )
    obj.run(res=res, x=x_data, norm="ortho")
