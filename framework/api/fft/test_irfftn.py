#!/bin/env python
# -*- coding: utf-8 -*-
# encoding=utf-8 vi:ts=4:sw=4:expandtab:ft=python
"""
test_irfftn
"""

from apibase import APIBase
import paddle
import pytest
import numpy as np


class TestFFtirfftn(APIBase):
    """
    test
    """

    def hook(self):
        """
        implement
        """
        self.types = [np.complex128, np.complex64]
        # self.debug = True
        # self.static = True
        # enable check grad
        self.enable_backward = False
        # self.delta = 1e-5


obj = TestFFtirfftn(paddle.fft.irfftn)


@pytest.mark.api_fft_irfftn_vartype
def test_irfftn_base():
    """
    base
    """
    np.random.seed(33)
    x = (np.random.rand(3) * 4 - 2) * 1j + np.random.rand(3)
    res = np.array([0.54653275, 0.1188641, -0.32386294, -0.08123422])
    obj.base(res=res, x=x)


@pytest.mark.api_fft_irfftn_parameters
def test_irfftn_0():
    """
    default
    x: tensor-2d
    """
    np.random.seed(33)
    x_data = (np.random.rand(3, 4) * 4 - 2) * 1j + np.random.rand(3, 4) * 10
    res = np.array(
        [
            [4.34399821, 0.19138414, 0.64844814, 0.16245881, 0.43750316, -0.18025044],
            [-0.09235259, -0.685032, -0.66472315, -0.82819662, 0.26601579, -0.61902403],
            [-0.76362967, -0.53881367, 0.88400472, -1.46618514, 0.25435735, -0.55438728],
        ]
    )
    obj.run(res=res, x=x_data)


@pytest.mark.api_fft_irfftn_parameters
def test_irfftn_1():
    """
    default
    x: tensor-3d
    """
    np.random.seed(33)
    x_data = (np.random.rand(3, 4, 5) * 4 - 2) * 1j + np.random.rand(3, 4, 5) * 10
    res = np.array(
        [
            [
                [5.73372784, 0.1505317, 0.20447261, 0.4043311, 0.00620767, 0.35772719, 0.5196435, -0.14545781],
                [-0.14724608, 0.00091119, 0.30253285, -0.17844519, -0.19170025, 0.14129652, -0.32778367, -5.077e-05],
                [-0.43600736, -0.05015829, 0.16871261, 0.39332178, 0.20172705, -0.07475436, 0.11975095, -0.1664766],
                [-0.09576639, -0.05378565, -0.50398332, 0.38110187, -0.19093063, -0.30653625, 0.26285826, -0.19759568],
            ],
            [
                [-0.03481554, 0.26493843, -0.06242309, 0.06635815, -0.24181133, 0.26044294, -0.62653393, 0.14450707],
                [-0.38355612, 0.36433266, 0.22207935, -0.2588346, 0.17651267, 0.06555562, 0.59774926, 0.33296656],
                [0.31994393, 0.06015675, 0.0046794, -0.14551614, -0.02652168, 0.08766164, -0.37520154, -0.05922944],
                [-0.53466039, -0.07431166, 0.2198457, 0.32361126, 0.1081905, -0.32281328, -0.35186794, -0.01311755],
            ],
            [
                [0.0778098, 0.05591285, -0.31765163, 0.14714416, -0.35583357, -0.16837168, -0.04343838, 0.24211265],
                [-0.46620142, 0.00620534, -0.2412356, -0.34234808, -0.00299933, 0.4939952, 0.28355566, 0.26057988],
                [0.35850374, 0.50038607, -0.45305733, -0.14339735, -0.05463482, 0.38372187, 0.18217902, 0.07149428],
                [-0.61842771, -0.04345885, 0.34351483, 0.36889142, 0.39417754, -0.13332151, 0.02592665, 0.12407667],
            ],
        ]
    )
    obj.run(res=res, x=x_data)


@pytest.mark.api_fft_irfftn_parameters
def test_irfftn_2():
    """
    default
    x: tensor-4d
    """
    x_data = np.array(
        [
            [
                [
                    [(-5.273493198809973 + 0j), (11.986695418633648 + 0j)],
                    [(-2.472957048508733 + 7.0434438168381455j), (-0.7093658503226581 - 14.643149684748074j)],
                    [(-4.420369857182546 + 0j), (0.89992465770833 + 0j)],
                    [(-2.472957048508733 - 7.0434438168381455j), (-0.7093658503226581 + 14.643149684748074j)],
                ],
                [
                    [(1.4611844908793108 + 1.28829894890925j), (-1.529991709040407 + 7.873943507828622j)],
                    [(-6.0864592457180775 - 0.36881720813794727j), (-12.4965329467155 - 3.945583072944093j)],
                    [(-4.308061484480212 + 6.138296314155509j), (0.8513361535552784 - 7.083951843491208j)],
                    [(-8.205665734356874 - 6.3372322958119245j), (5.485082540196089 + 3.4102130190791695j)],
                ],
                [
                    [(1.4611844908793108 - 1.28829894890925j), (-1.529991709040407 - 7.873943507828622j)],
                    [(-8.205665734356874 + 6.3372322958119245j), (5.485082540196089 - 3.4102130190791695j)],
                    [(-4.308061484480212 - 6.138296314155509j), (0.8513361535552784 + 7.083951843491208j)],
                    [(-6.0864592457180775 + 0.36881720813794727j), (-12.4965329467155 + 3.945583072944093j)],
                ],
            ],
            [
                [
                    [(0.9704759355111174 + 0j), (-6.66891609226257 + 0j)],
                    [(8.754320152082732 - 7.019224202085675j), (-3.3518531213110108 - 0.9146751066713259j)],
                    [(3.8475771404341166 + 0j), (14.031521180663894 + 0j)],
                    [(8.754320152082732 + 7.019224202085675j), (-3.3518531213110108 + 0.9146751066713259j)],
                ],
                [
                    [(-6.532774481454965 - 2.2749804803442624j), (-4.71760627084971 + 3.3190049234091177j)],
                    [(-2.200888591531575 + 1.690285946406074j), (-9.429491217870146 - 5.112429580350996j)],
                    [(5.911664401016624 + 5.176020250082808j), (6.885020465690684 + 8.883607800343455j)],
                    [(1.6448488595446304 + 0.4427695356249519j), (-0.7815447191314142 - 2.004489227394244j)],
                ],
                [
                    [(-6.532774481454965 + 2.2749804803442624j), (-4.71760627084971 - 3.3190049234091177j)],
                    [(1.6448488595446304 - 0.4427695356249519j), (-0.7815447191314142 + 2.004489227394244j)],
                    [(5.911664401016624 - 5.176020250082808j), (6.885020465690684 - 8.883607800343455j)],
                    [(-2.200888591531575 - 1.690285946406074j), (-9.429491217870146 + 5.112429580350996j)],
                ],
            ],
        ]
    )

    res = np.array(
        [
            [
                [
                    [-1.00595949, -0.20009832],
                    [-0.35623679, -0.95880124],
                    [1.48158275, -1.25984029],
                    [-1.9213543, 1.81300813],
                ],
                [
                    [0.72180322, -0.05364749],
                    [1.86010728, -0.42640504],
                    [-1.68176971, -0.5943703],
                    [-1.34545935, 1.93266728],
                ],
                [
                    [1.52251274, -0.02374613],
                    [-0.39616304, -0.19483415],
                    [0.88350739, -1.00892686],
                    [0.49111981, -1.43020474],
                ],
            ],
            [
                [
                    [-1.19529487, -1.67512908],
                    [1.81388918, -1.77704692],
                    [0.39814593, 0.89199052],
                    [1.88115888, 1.28627783],
                ],
                [
                    [0.11020427, -0.67409308],
                    [-0.58407122, -1.68387879],
                    [0.22365752, -1.33682215],
                    [-0.81904868, 1.36243394],
                ],
                [
                    [-0.54975196, -0.63674409],
                    [0.84160698, -1.87316899],
                    [-0.11044854, 0.92630649],
                    [1.0928631, -1.03502083],
                ],
            ],
        ]
    )
    obj.run(res=res, x=x_data)


@pytest.mark.api_fft_irfftn_parameters
def test_irfftn_3():
    """
    default
    x: tensor-3d
    s = (1, 2)
    """
    x_data = np.array(
        [
            [
                [[(-1.2060578060458984 + 0j), (-0.8058611744522621 + 0j)]],
                [[(0.6681557251262684 + 0j), (0.7754507127220456 + 0j)]],
                [[(1.4987666093072192 + 0j), (1.5462588644147117 + 0j)]],
            ],
            [
                [[(-2.8704239523175756 + 0j), (0.4798342120928938 + 0j)]],
                [[(-0.5638888120678853 + 0j), (0.784297351582774 + 0j)]],
                [[(-1.1864960522546242 + 0j), (0.08699212756400199 + 0j)]],
            ],
        ]
    )
    res = np.array(
        [
            [[[-1.00595949, -0.20009832]], [[0.72180322, -0.05364749]], [[1.52251274, -0.02374613]]],
            [[[-1.19529487, -1.67512908]], [[0.11020427, -0.67409308]], [[-0.54975196, -0.63674409]]],
        ]
    )
    obj.run(res=res, x=x_data, s=(1, 2))


@pytest.mark.api_fft_irfftn_parameters
def test_irfftn_4():
    """
    default
    x: tensor-3d
    s = (1, 2)
    axes=(0, 2)
    """
    x_data = np.array(
        [
            [
                [
                    [(-1.3621962782629171 + 0j), (-1.1588995522492187 + 0j)],
                    [(-0.6497227022352434 + 0j), (0.7587029206555824 + 0j)],
                ],
                [
                    [(2.5819104983879733 + 0j), (-0.4800525373113551 + 0j)],
                    [(-1.1383040605396593 + 0j), (0.37275754971557795 + 0j)],
                ],
                [
                    [(1.1263497013348793 + 0j), (-0.2185802755186934 + 0j)],
                    [(1.9186757723870516 + 0j), (0.17108802041120086 + 0j)],
                ],
            ]
        ]
    )
    res = np.array(
        [
            [
                [[-1.00595949, -0.20009832], [-0.35623679, -0.95880124]],
                [[0.72180322, -0.05364749], [1.86010728, -0.42640504]],
                [[1.52251274, -0.02374613], [-0.39616304, -0.19483415]],
            ]
        ]
    )
    obj.run(res=res, x=x_data, s=(1, 2), axes=(0, 2))


@pytest.mark.api_fft_irfftn_parameters
def test_irfftn_5():
    """
    default
    x: tensor-3d
    s = (1, 2)
    axes=(0, 2)
    norm = 'forward'
    """
    x_data = np.array(
        [
            [
                [
                    [(-1.3621962782629171 + 0j), (-1.1588995522492187 + 0j)],
                    [(-0.6497227022352434 + 0j), (0.7587029206555824 + 0j)],
                ],
                [
                    [(2.5819104983879733 + 0j), (-0.4800525373113551 + 0j)],
                    [(-1.1383040605396593 + 0j), (0.37275754971557795 + 0j)],
                ],
                [
                    [(1.1263497013348793 + 0j), (-0.2185802755186934 + 0j)],
                    [(1.9186757723870516 + 0j), (0.17108802041120086 + 0j)],
                ],
            ]
        ]
    )
    res = np.array(
        [
            [
                [[-2.01191898, -0.40019663], [-0.71247358, -1.91760247]],
                [[1.44360644, -0.10729499], [3.72021456, -0.85281009]],
                [[3.04502547, -0.04749226], [-0.79232607, -0.3896683]],
            ]
        ]
    )
    obj.run(res=res, x=x_data, s=(1, 2), axes=(0, 2), norm="forward")


@pytest.mark.api_fft_irfftn_parameters
def test_irfftn_6():
    """
    default
    x: tensor-3d
    s = (1, 2)
    axes=(0, 2)
    norm = 'ortho'
    """
    x_data = np.array(
        [
            [
                [
                    [(-1.3621962782629171 + 0j), (-1.1588995522492187 + 0j)],
                    [(-0.6497227022352434 + 0j), (0.7587029206555824 + 0j)],
                ],
                [
                    [(2.5819104983879733 + 0j), (-0.4800525373113551 + 0j)],
                    [(-1.1383040605396593 + 0j), (0.37275754971557795 + 0j)],
                ],
                [
                    [(1.1263497013348793 + 0j), (-0.2185802755186934 + 0j)],
                    [(1.9186757723870516 + 0j), (0.17108802041120086 + 0j)],
                ],
            ]
        ]
    )
    res = np.array(
        [
            [
                [[-1.42264155, -0.28298175], [-0.5037949, -1.35594971]],
                [[1.0207839, -0.07586901], [2.63058894, -0.6030278]],
                [[2.15315816, -0.0335821], [-0.56025914, -0.27553709]],
            ]
        ]
    )
    obj.run(res=res, x=x_data, s=(1, 2), axes=(0, 2), norm="ortho")
