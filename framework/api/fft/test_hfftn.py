#!/bin/env python
# -*- coding: utf-8 -*-
# encoding=utf-8 vi:ts=4:sw=4:expandtab:ft=python
"""
test_hfftn
"""

from apibase import APIBase
import paddle
import pytest
import numpy as np


class TestFFthfftn(APIBase):
    """
    test
    """

    def hook(self):
        """
        implement
        """
        self.types = [np.complex128, np.complex64]
        # self.debug = True
        # self.static = True
        # enable check grad
        self.enable_backward = False
        # self.delta = 1e-5


obj = TestFFthfftn(paddle.fft.hfftn)


@pytest.mark.api_fft_hfftn_vartype
def test_hfftn_base():
    """
    base
    """
    np.random.seed(33)
    x = (np.random.rand(3) * 4 - 2) * 1j + np.random.rand(3)
    res = np.array([2.18613099, -0.32493687, -1.29545176, 0.47545640])
    obj.base(res=res, x=x)


@pytest.mark.api_fft_hfftn_parameters
def test_hfftn_0():
    """
    default
    x: tensor-2d
    """
    np.random.seed(33)
    x_data = (np.random.rand(3, 4) * 4 - 2) * 1j + np.random.rand(3, 4) * 10
    res = np.array(
        [
            [78.19196770, -3.24450794, 7.87505684, 2.92425862, 11.67206657, 3.44491444],
            [-13.74533407, -9.97897106, 4.57843235, -26.39133260, 15.91208503, -9.69864609],
            [-1.66234664, -11.14243263, 4.78828427, -14.90753923, -11.96501675, -12.33057600],
        ]
    )
    obj.run(res=res, x=x_data)


@pytest.mark.api_fft_hfftn_parameters
def test_hfftn_1():
    """
    default
    x: tensor-3d
    """
    np.random.seed(33)
    x_data = (np.random.rand(3, 4, 5) * 4 - 2) * 1j + np.random.rand(3, 4, 5) * 10
    res = np.array(
        [
            [
                [
                    550.43787240,
                    -13.96394944,
                    49.88577605,
                    34.34180993,
                    0.59593645,
                    38.81578522,
                    19.62937026,
                    14.45104279,
                ],
                [
                    -9.19357331,
                    -18.96918568,
                    25.23439313,
                    -29.42748048,
                    -18.32934043,
                    36.58577936,
                    -48.38239896,
                    -5.16342254,
                ],
                [
                    -41.85670697,
                    -15.98175363,
                    11.49609076,
                    -7.17641816,
                    19.36579637,
                    37.75889076,
                    16.19641074,
                    -4.81519623,
                ],
                [
                    -14.13562337,
                    -0.00487357,
                    -31.46723269,
                    13.56446557,
                    -18.40322363,
                    -17.13073790,
                    29.04315403,
                    0.08747428,
                ],
            ],
            [
                [
                    7.46974047,
                    23.24281406,
                    -4.17008426,
                    -16.16368093,
                    -34.16002302,
                    14.12583889,
                    -30.49455695,
                    5.36763386,
                ],
                [
                    -59.36906056,
                    11.91136059,
                    2.48895844,
                    -12.79886474,
                    37.84104431,
                    35.41357593,
                    32.97742329,
                    -4.17205006,
                ],
                [
                    34.41635858,
                    6.86345075,
                    17.48918570,
                    36.83729907,
                    -5.24494238,
                    -13.76614519,
                    -43.49350386,
                    48.03706243,
                ],
                [
                    -44.75533670,
                    25.01566856,
                    27.22134359,
                    47.42353902,
                    -0.28793601,
                    -32.86541576,
                    -23.15861796,
                    0.59571255,
                ],
            ],
            [
                [
                    -3.34229141,
                    13.87267830,
                    -60.14725773,
                    25.00252215,
                    -23.21388765,
                    6.37038210,
                    -5.99261647,
                    25.43408942,
                ],
                [
                    -51.32739757,
                    -1.25928460,
                    -33.77932248,
                    -30.99007466,
                    10.38628809,
                    31.06668070,
                    21.10518672,
                    -7.13391929,
                ],
                [30.71461768, -5.68602584, -36.01934831, 8.41551702, -2.54608083, -13.96954913, 0.44922218, 5.77504762],
                [
                    -36.82138752,
                    31.96478992,
                    57.38392867,
                    6.29333986,
                    16.94521673,
                    -24.84812201,
                    21.31961766,
                    34.97593554,
                ],
            ],
        ]
    )
    obj.run(res=res, x=x_data)


@pytest.mark.api_fft_hfftn_parameters
def test_hfftn_2():
    """
    default
    x: tensor-4d
    """
    x_data = np.array(
        [
            [
                [
                    [(-5.273493198809973 + 0j), (11.986695418633648 + 0j)],
                    [(-2.472957048508733 + 7.0434438168381455j), (-0.7093658503226581 - 14.643149684748074j)],
                    [(-4.420369857182546 + 0j), (0.89992465770833 + 0j)],
                    [(-2.472957048508733 - 7.0434438168381455j), (-0.7093658503226581 + 14.643149684748074j)],
                ],
                [
                    [(1.4611844908793108 + 1.28829894890925j), (-1.529991709040407 + 7.873943507828622j)],
                    [(-6.0864592457180775 - 0.36881720813794727j), (-12.4965329467155 - 3.945583072944093j)],
                    [(-4.308061484480212 + 6.138296314155509j), (0.8513361535552784 - 7.083951843491208j)],
                    [(-8.205665734356874 - 6.3372322958119245j), (5.485082540196089 + 3.4102130190791695j)],
                ],
                [
                    [(1.4611844908793108 - 1.28829894890925j), (-1.529991709040407 - 7.873943507828622j)],
                    [(-8.205665734356874 + 6.3372322958119245j), (5.485082540196089 - 3.4102130190791695j)],
                    [(-4.308061484480212 - 6.138296314155509j), (0.8513361535552784 + 7.083951843491208j)],
                    [(-6.0864592457180775 + 0.36881720813794727j), (-12.4965329467155 + 3.945583072944093j)],
                ],
            ],
            [
                [
                    [(0.9704759355111174 + 0j), (-6.66891609226257 + 0j)],
                    [(8.754320152082732 - 7.019224202085675j), (-3.3518531213110108 - 0.9146751066713259j)],
                    [(3.8475771404341166 + 0j), (14.031521180663894 + 0j)],
                    [(8.754320152082732 + 7.019224202085675j), (-3.3518531213110108 + 0.9146751066713259j)],
                ],
                [
                    [(-6.532774481454965 - 2.2749804803442624j), (-4.71760627084971 + 3.3190049234091177j)],
                    [(-2.200888591531575 + 1.690285946406074j), (-9.429491217870146 - 5.112429580350996j)],
                    [(5.911664401016624 + 5.176020250082808j), (6.885020465690684 + 8.883607800343455j)],
                    [(1.6448488595446304 + 0.4427695356249519j), (-0.7815447191314142 - 2.004489227394244j)],
                ],
                [
                    [(-6.532774481454965 + 2.2749804803442624j), (-4.71760627084971 - 3.3190049234091177j)],
                    [(1.6448488595446304 - 0.4427695356249519j), (-0.7815447191314142 + 2.004489227394244j)],
                    [(5.911664401016624 - 5.176020250082808j), (6.885020465690684 - 8.883607800343455j)],
                    [(-2.200888591531575 - 1.690285946406074j), (-9.429491217870146 + 5.112429580350996j)],
                ],
            ],
        ]
    )

    res = np.array(
        [
            [
                [
                    [-48.28605553, -9.60471916],
                    [-92.22500632, 87.02439005],
                    [71.11597216, -60.47233398],
                    [-17.09936582, -46.02245935],
                ],
                [
                    [73.08061137, -1.13981412],
                    [23.57375086, -68.64982735],
                    [42.40835491, -48.42848939],
                    [-19.01582571, -9.35203910],
                ],
                [
                    [34.64655451, -2.57507970],
                    [-64.58204878, 92.76802964],
                    [-80.72494631, -28.52977451],
                    [89.28514941, -20.46744209],
                ],
            ],
            [
                [
                    [-57.37415377, -80.40619595],
                    [90.29562612, 61.74133582],
                    [19.11100482, 42.81554505],
                    [87.06668060, -85.29825223],
                ],
                [
                    [-26.38809419, -30.56371632],
                    [52.45742866, -49.68099990],
                    [-5.30152972, 44.46271154],
                    [40.39713489, -89.91211171],
                ],
                [
                    [5.28980495, -32.35646793],
                    [-39.31433644, 65.39682915],
                    [10.73556104, -64.16746313],
                    [-28.03541845, -80.82618216],
                ],
            ],
        ]
    )
    obj.run(res=res, x=x_data)


@pytest.mark.api_fft_hfftn_parameters
def test_hfftn_3():
    """
    default
    x: tensor-3d
    s = (1, 2)
    """
    x_data = np.array(
        [
            [
                [[(-1.2060578060458984 + 0j), (-0.8058611744522621 + 0j)]],
                [[(0.6681557251262684 + 0j), (0.7754507127220456 + 0j)]],
                [[(1.4987666093072192 + 0j), (1.5462588644147117 + 0j)]],
            ],
            [
                [[(-2.8704239523175756 + 0j), (0.4798342120928938 + 0j)]],
                [[(-0.5638888120678853 + 0j), (0.784297351582774 + 0j)]],
                [[(-1.1864960522546242 + 0j), (0.08699212756400199 + 0j)]],
            ],
        ]
    )
    res = np.array(
        [
            [[[-2.01191898, -0.40019663]], [[1.44360644, -0.10729499]], [[3.04502547, -0.04749226]]],
            [[[-2.39058974, -3.35025816]], [[0.22040854, -1.34818616]], [[-1.09950392, -1.27348818]]],
        ]
    )
    obj.run(res=res, x=x_data, s=(1, 2))


@pytest.mark.api_fft_hfftn_parameters
def test_hfftn_4():
    """
    default
    x: tensor-3d
    s = (1, 2)
    axes=(0, 2)
    """
    x_data = np.array(
        [
            [
                [
                    [(-1.3621962782629171 + 0j), (-1.1588995522492187 + 0j)],
                    [(-0.6497227022352434 + 0j), (0.7587029206555824 + 0j)],
                ],
                [
                    [(2.5819104983879733 + 0j), (-0.4800525373113551 + 0j)],
                    [(-1.1383040605396593 + 0j), (0.37275754971557795 + 0j)],
                ],
                [
                    [(1.1263497013348793 + 0j), (-0.2185802755186934 + 0j)],
                    [(1.9186757723870516 + 0j), (0.17108802041120086 + 0j)],
                ],
            ]
        ]
    )
    res = np.array(
        [
            [
                [[-2.01191898, -0.40019663], [-0.71247358, -1.91760247]],
                [[1.44360644, -0.10729499], [3.72021456, -0.85281009]],
                [[3.04502547, -0.04749226], [-0.79232607, -0.38966830]],
            ]
        ]
    )
    obj.run(res=res, x=x_data, s=(1, 2), axes=(0, 2))


@pytest.mark.api_fft_hfftn_parameters
def test_hfftn_5():
    """
    default
    x: tensor-3d
    s = (1, 2)
    axes=(0, 2)
    norm = 'forward'
    """
    x_data = np.array(
        [
            [
                [
                    [(-1.3621962782629171 + 0j), (-1.1588995522492187 + 0j)],
                    [(-0.6497227022352434 + 0j), (0.7587029206555824 + 0j)],
                ],
                [
                    [(2.5819104983879733 + 0j), (-0.4800525373113551 + 0j)],
                    [(-1.1383040605396593 + 0j), (0.37275754971557795 + 0j)],
                ],
                [
                    [(1.1263497013348793 + 0j), (-0.2185802755186934 + 0j)],
                    [(1.9186757723870516 + 0j), (0.17108802041120086 + 0j)],
                ],
            ]
        ]
    )
    res = np.array(
        [
            [
                [[-1.00595949, -0.20009832], [-0.35623679, -0.95880124]],
                [[0.72180322, -0.05364749], [1.86010728, -0.42640504]],
                [[1.52251274, -0.02374613], [-0.39616304, -0.19483415]],
            ]
        ]
    )
    obj.run(res=res, x=x_data, s=(1, 2), axes=(0, 2), norm="forward")


@pytest.mark.api_fft_hfftn_parameters
def test_hfftn_6():
    """
    default
    x: tensor-3d
    s = (1, 2)
    axes=(0, 2)
    norm = 'ortho'
    """
    x_data = np.array(
        [
            [
                [
                    [(-1.3621962782629171 + 0j), (-1.1588995522492187 + 0j)],
                    [(-0.6497227022352434 + 0j), (0.7587029206555824 + 0j)],
                ],
                [
                    [(2.5819104983879733 + 0j), (-0.4800525373113551 + 0j)],
                    [(-1.1383040605396593 + 0j), (0.37275754971557795 + 0j)],
                ],
                [
                    [(1.1263497013348793 + 0j), (-0.2185802755186934 + 0j)],
                    [(1.9186757723870516 + 0j), (0.17108802041120086 + 0j)],
                ],
            ]
        ]
    )
    res = np.array(
        [
            [
                [[-1.42264155, -0.28298175], [-0.50379490, -1.35594971]],
                [[1.02078390, -0.07586901], [2.63058894, -0.60302780]],
                [[2.15315816, -0.03358210], [-0.56025914, -0.27553709]],
            ]
        ]
    )
    obj.run(res=res, x=x_data, s=(1, 2), axes=(0, 2), norm="ortho")
