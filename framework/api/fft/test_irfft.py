#!/bin/env python
# -*- coding: utf-8 -*-
# encoding=utf-8 vi:ts=4:sw=4:expandtab:ft=python
"""
test_irfft
"""

from apibase import APIBase
import paddle
import pytest
import numpy as np


class TestFFtirfft(APIBase):
    """
    test
    """

    def hook(self):
        """
        implement
        """
        self.types = [np.complex128, np.complex64]
        # self.debug = True
        # self.static = True
        # enable check grad
        self.enable_backward = False
        # self.delta = 1e-5


obj = TestFFtirfft(paddle.fft.irfft)


@pytest.mark.api_fft_ihfft_vartype
def test_ihfft_base():
    """
    base
    """
    np.random.seed(33)
    x = (np.random.rand(3) * 4 - 2) * 1j + np.random.rand(3)
    res = np.array([0.54653275, 0.1188641, -0.32386294, -0.08123422])
    obj.base(res=res, x=x)


@pytest.mark.api_fft_ihfft_parameters
def test_ihfft0():
    """
    default
    x: tensor-2d
    """
    np.random.seed(33)
    x_data = (np.random.rand(3, 4) * 4 - 2) * 1j + np.random.rand(3, 4)
    res = np.array(
        [
            [0.34880159, 0.04129395, 0.04620701, -0.2131923, 0.1363536, -0.27990628],
            [0.52032751, 1.00540527, -0.11814649, 0.04052138, 0.2637788, -0.83125828],
            [0.43407036, -0.48757729, 0.55124965, 0.22140856, -0.55365718, 0.55538275],
        ]
    )
    obj.run(res=res, x=x_data)


@pytest.mark.api_fft_ihfft_parameters
def test_ihfft1():
    """
    default
    x: tensor-3d
    """
    np.random.seed(33)
    x_data = (np.random.rand(3, 4, 4) * 4 - 2) * 1j + np.random.rand(3, 4, 4)
    res = np.array(
        [
            [
                [0.3222561, 0.10802379, -0.08900987, 0.17696672, 0.00113672, -0.21317643],
                [0.38557249, 1.06018074, -0.08520064, -0.0784672, 0.29672465, -0.77648282],
                [0.3234863, -0.47296382, 0.56789955, 0.16836452, -0.53700728, 0.56999623],
                [0.43406444, 0.62413203, -0.15147416, 0.03956996, 0.2821673, -0.49582914],
            ],
            [
                [0.48369458, 0.02637102, -0.30462068, 0.11759644, -0.08960568, -0.21606365],
                [0.62767729, 0.06894346, 0.53880305, 0.16629755, -0.3272493, -0.23001259],
                [0.73151713, 0.08627687, 1.03827941, -0.14506092, -0.97610623, 0.16639005],
                [0.5500845, -0.77069863, 0.21962403, -0.15163976, -0.35147259, 0.83037993],
            ],
            [
                [0.48570823, 0.29430256, 0.19851296, 0.07036501, 0.14653881, -0.43209893],
                [0.44514514, 0.62009111, 0.24119672, 0.06519156, -0.05773993, -0.62460149],
                [0.70096195, 0.00494237, 0.36093779, 0.27015805, -0.49258859, 0.12322001],
                [0.60649908, -0.71871519, 0.04477537, -0.09232067, -0.05138613, 0.44705291],
            ],
        ]
    )
    obj.run(res=res, x=x_data)


@pytest.mark.api_fft_ihfft_parameters
def test_ihfft2():
    """
    default
    x: tensor-4d
    """
    np.random.seed(33)
    x_data = np.array(
        [
            [
                [
                    [(-1.2060578060458984 + 0j), (-0.8058611744522621 + 0j)],
                    [(-1.3150380244662374 + 0j), (0.6025644484385637 + 0j)],
                    [(0.2217424620354178 + 0j), (2.741423044740178 + 0j)],
                    [(-0.10834617226497567 + 0j), (-3.7343624242946722 + 0j)],
                ],
                [
                    [(0.6681557251262684 + 0j), (0.7754507127220456 + 0j)],
                    [(1.4337022359503497 + 0j), (2.286512322977283 + 0j)],
                    [(-2.276140017197238 + 0j), (-1.087399412507608 + 0j)],
                    [(0.5872079345559715 + 0j), (-3.2781266337152095 + 0j)],
                ],
                [
                    [(1.4987666093072192 + 0j), (1.5462588644147117 + 0j)],
                    [(-0.5909971834910333 + 0j), (-0.20132888756113898 + 0j)],
                    [(-0.12541946823758998 + 0j), (1.8924342562687597 + 0j)],
                    [(-0.939084926921681 + 0j), (1.9213245461548887 + 0j)],
                ],
                [
                    [(-2.8704239523175756 + 0j), (0.4798342120928938 + 0j)],
                    [(0.03684225780518524 + 0j), (3.5909361006678218 + 0j)],
                    [(1.2901364557956696 + 0j), (-0.4938445881521898 + 0j)],
                    [(3.1674367071079645 + 0j), (0.5948810478106115 + 0j)],
                ],
            ],
            [
                [
                    [(-0.5638888120678853 + 0j), (0.784297351582774 + 0j)],
                    [(-2.2679500126053154 + 0j), (1.0998075773317066 + 0j)],
                    [(-1.1131646267395006 + 0j), (1.5604796701425894 + 0j)],
                    [(0.543385264798121 + 0j), (-2.1814826164709915 + 0j)],
                ],
                [
                    [(-1.1864960522546242 + 0j), (0.08699212756400199 + 0j)],
                    [(-1.0315620170188784 + 0j), (2.714775970751132 + 0j)],
                    [(0.815857954599478 + 0j), (-1.0367550262449061 + 0j)],
                    [(0.057842265736816056 + 0j), (2.127883928372665 + 0j)],
                ],
                [
                    [(-2.2286132645681143 + 0j), (0.6781896286515403 + 0j)],
                    [(-0.9667816551742545 + 0j), (1.7326674129888993 + 0j)],
                    [(1.2098154661132194 + 0j), (1.2088022486313643 + 0j)],
                    [(-2.1945595950344985 + 0j), (-1.3294858028418193 + 0j)],
                ],
                [
                    [(-0.7681306188095895 + 0j), (1.7263346348551103 + 0j)],
                    [(-1.932519547740156 + 0j), (1.355627348708666 + 0j)],
                    [(0.5037191618155563 + 0j), (1.357324318685445 + 0j)],
                    [(-1.0359154817302252 + 0j), (-0.21099336716273287 + 0j)],
                ],
            ],
            [
                [
                    [(-2.057051909967652 + 0j), (-1.8039718826793534 + 0j)],
                    [(0.21925971643259823 + 0j), (2.926744421135363 + 0j)],
                    [(0.4781110392652117 + 0j), (2.277564664330704 + 0j)],
                    [(2.410940609612261 + 0j), (-0.26108036308200955 + 0j)],
                ],
                [
                    [(3.492484950222524 + 0j), (-0.2821144086333627 + 0j)],
                    [(0.4604818877408494 + 0j), (-1.0281925617536745 + 0j)],
                    [(0.4950666908606145 + 0j), (-1.8848468650248869 + 0j)],
                    [(-0.22110893193576509 + 0j), (-0.30266408353375684 + 0j)],
                ],
                [
                    [(-0.2510088389684637 + 0j), (2.35763793743469 + 0j)],
                    [(1.402547618815409 + 0j), (-1.7829833130545953 + 0j)],
                    [(-0.09898750170813875 + 0j), (1.613252468238176 + 0j)],
                    [(-0.04486305225725529 + 0j), (-0.588229030318709 + 0j)],
                ],
                [
                    [(2.1133683079956915 + 0j), (1.6276843767446785 + 0j)],
                    [(0.5754197153471892 + 0j), (3.2074939751769818 + 0j)],
                    [(-0.7912025783602701 + 0j), (-1.32155449484745 + 0j)],
                    [(2.4687448239977363 + 0j), (-1.2422252887723428 + 0j)],
                ],
            ],
        ]
    )
    res = np.array(
        [
            [
                [
                    [-1.00595949, -0.20009832],
                    [-0.35623679, -0.95880124],
                    [1.48158275, -1.25984029],
                    [-1.9213543, 1.81300813],
                ],
                [
                    [0.72180322, -0.05364749],
                    [1.86010728, -0.42640504],
                    [-1.68176971, -0.5943703],
                    [-1.34545935, 1.93266728],
                ],
                [
                    [1.52251274, -0.02374613],
                    [-0.39616304, -0.19483415],
                    [0.88350739, -1.00892686],
                    [0.49111981, -1.43020474],
                ],
                [
                    [-1.19529487, -1.67512908],
                    [1.81388918, -1.77704692],
                    [0.39814593, 0.89199052],
                    [1.88115888, 1.28627783],
                ],
            ],
            [
                [
                    [0.11020427, -0.67409308],
                    [-0.58407122, -1.68387879],
                    [0.22365752, -1.33682215],
                    [-0.81904868, 1.36243394],
                ],
                [
                    [-0.54975196, -0.63674409],
                    [0.84160698, -1.87316899],
                    [-0.11044854, 0.92630649],
                    [1.0928631, -1.03502083],
                ],
                [
                    [-0.77521182, -1.45340145],
                    [0.38294288, -1.34972453],
                    [1.20930886, 0.00050661],
                    [-1.7620227, -0.4325369],
                ],
                [
                    [0.47910201, -1.24723263],
                    [-0.2884461, -1.64407345],
                    [0.93052174, -0.42680258],
                    [-0.62345442, -0.41246106],
                ],
            ],
            [
                [
                    [-1.9305119, -0.12654001],
                    [1.57300207, -1.35374235],
                    [1.37783785, -0.89972681],
                    [1.07493012, 1.33601049],
                ],
                [
                    [1.60518527, 1.88729968],
                    [-0.28385534, 0.74433722],
                    [-0.69489009, 1.18995678],
                    [-0.26188651, 0.04077758],
                ],
                [
                    [1.05331455, -1.30432339],
                    [-0.19021785, 1.59276547],
                    [0.75713248, -0.85611998],
                    [-0.31654604, 0.27168299],
                ],
                [
                    [1.87052634, 0.24284197],
                    [1.89145685, -1.31603713],
                    [-1.05637854, 0.26517596],
                    [0.61325977, 1.85548506],
                ],
            ],
        ]
    )
    obj.run(res=res, x=x_data)


@pytest.mark.api_fft_ihfft_parameters
def test_ihfft3():
    """
    default
    x: tensor-3d
    n=2
    """
    np.random.seed(33)
    x_data = np.array(
        [
            [
                [(-1.2060578060458984 + 0j), (-0.8058611744522621 + 0j)],
                [(0.2217424620354178 + 0j), (2.741423044740178 + 0j)],
                [(0.6681557251262684 + 0j), (0.7754507127220456 + 0j)],
                [(-2.276140017197238 + 0j), (-1.087399412507608 + 0j)],
            ],
            [
                [(1.4987666093072192 + 0j), (1.5462588644147117 + 0j)],
                [(-0.12541946823758998 + 0j), (1.8924342562687597 + 0j)],
                [(-2.8704239523175756 + 0j), (0.4798342120928938 + 0j)],
                [(1.2901364557956696 + 0j), (-0.4938445881521898 + 0j)],
            ],
            [
                [(-0.5638888120678853 + 0j), (0.784297351582774 + 0j)],
                [(-1.1131646267395006 + 0j), (1.5604796701425894 + 0j)],
                [(-1.1864960522546242 + 0j), (0.08699212756400199 + 0j)],
                [(0.815857954599478 + 0j), (-1.0367550262449061 + 0j)],
            ],
            [
                [(-2.2286132645681143 + 0j), (0.6781896286515403 + 0j)],
                [(1.2098154661132194 + 0j), (1.2088022486313643 + 0j)],
                [(-0.7681306188095895 + 0j), (1.7263346348551103 + 0j)],
                [(0.5037191618155563 + 0j), (1.357324318685445 + 0j)],
            ],
        ]
    )
    res = np.array(
        [
            [
                [-1.00595949, -0.20009832],
                [1.48158275, -1.25984029],
                [0.72180322, -0.05364749],
                [-1.68176971, -0.5943703],
            ],
            [
                [1.52251274, -0.02374613],
                [0.88350739, -1.00892686],
                [-1.19529487, -1.67512908],
                [0.39814593, 0.89199052],
            ],
            [
                [0.11020427, -0.67409308],
                [0.22365752, -1.33682215],
                [-0.54975196, -0.63674409],
                [-0.11044854, 0.92630649],
            ],
            [
                [-0.77521182, -1.45340145],
                [1.20930886, 0.00050661],
                [0.47910201, -1.24723263],
                [0.93052174, -0.42680258],
            ],
        ]
    )
    obj.run(res=res, x=x_data, n=2)


@pytest.mark.api_fft_ihfft_parameters
def test_ihfft4():
    """
    default
    x: tensor-3d
    n=2
    axis=1
    """
    np.random.seed(33)
    x_data = np.array(
        [
            [
                [
                    (0.4756232631387176 + 0j),
                    (-1.4599386071491982 + 0j),
                    (-2.277591086293661 + 0j),
                    (0.8542068895624477 + 0j),
                ],
                [
                    (-2.487542243636878 + 0j),
                    (1.059741975555562 + 0j),
                    (1.565117510265987 + 0j),
                    (-2.771809362467249 + 0j),
                ],
            ],
            [
                [
                    (2.4060201308765503 + 0j),
                    (-1.0326729898069211 + 0j),
                    (0.09495677409051773 + 0j),
                    (-1.625038884503232 + 0j),
                ],
                [
                    (0.6390053428453806 + 0j),
                    (0.9851807346994286 + 0j),
                    (-0.88728284514269 + 0j),
                    (1.2353705885733377 + 0j),
                ],
            ],
            [
                [
                    (0.33386179145898875 + 0j),
                    (-2.0109152302663746 + 0j),
                    (-1.4031198934732396 + 0j),
                    (-0.32144485433395475 + 0j),
                ],
                [
                    (-0.11345325194410005 + 0j),
                    (0.6627290666157153 + 0j),
                    (0.2349774581996309 + 0j),
                    (-3.0463127356030673 + 0j),
                ],
            ],
        ]
    )
    res = np.array(
        [
            [[-1.00595949, -0.20009832, -0.35623679, -0.95880124], [1.48158275, -1.25984029, -1.9213543, 1.81300813]],
            [[1.52251274, -0.02374613, -0.39616304, -0.19483415], [0.88350739, -1.00892686, 0.49111981, -1.43020474]],
            [[0.11020427, -0.67409308, -0.58407122, -1.68387879], [0.22365752, -1.33682215, -0.81904868, 1.36243394]],
        ]
    )
    obj.run(res=res, x=x_data, n=2, axis=1)


@pytest.mark.api_fft_ihfft_parameters
def test_ihfft5():
    """
    default
    x: tensor-2d
    norm = forward
    """
    np.random.seed(33)
    x_data = (np.random.rand(3, 4, 4) * 4 - 2) * 1j + np.random.rand(3, 4, 4)
    res = np.array(
        [
            [
                [1.93353663, 0.64814276, -0.53405921, 1.06180034, 0.00682032, -1.27905857],
                [2.31343495, 6.36108442, -0.51120386, -0.47080322, 1.78034788, -4.65889689],
                [1.94091778, -2.8377829, 3.40739732, 1.01018713, -3.22204368, 3.41997736],
                [2.60438667, 3.74479218, -0.90884497, 0.23741978, 1.69300381, -2.97497485],
            ],
            [
                [2.90216747, 0.1582261, -1.82772408, 0.70557866, -0.53763407, -1.29638191],
                [3.76606374, 0.41366073, 3.23281831, 0.99778531, -1.96349579, -1.38007552],
                [4.3891028, 0.51766123, 6.22967644, -0.8703655, -5.85663736, 0.9983403],
                [3.30050701, -4.62419175, 1.31774415, -0.90983856, -2.10883554, 4.98227956],
            ],
            [
                [2.91424939, 1.76581538, 1.19107776, 0.42219004, 0.87923287, -2.59259361],
                [2.67087085, 3.72054669, 1.44718034, 0.39114935, -0.34643959, -3.74760891],
                [4.20577171, 0.02965422, 2.16562676, 1.62094831, -2.95553156, 0.73932008],
                [3.63899449, -4.31229117, 0.2686522, -0.55392399, -0.30831681, 2.68231746],
            ],
        ]
    )
    obj.run(res=res, x=x_data, norm="forward")


@pytest.mark.api_fft_ihfft_parameters
def test_ihfft6():
    """
    default
    x: tensor-2d
    norm = ortho
    """
    np.random.seed(33)
    x_data = (np.random.rand(3, 4, 4) * 4 - 2) * 1j + np.random.rand(3, 4, 4)
    res = np.array(
        [
            [
                [0.78936302, 0.26460318, -0.21802876, 0.43347817, 0.00278438, -0.52217347],
                [0.94445586, 2.59690184, -0.2086981, -0.19220461, 0.72682398, -1.90198669],
                [0.79237636, -1.15852002, 1.39106413, 0.41240717, -1.31539382, 1.39619991],
                [1.06323641, 1.528805, -0.37103441, 0.09692622, 0.69116591, -1.2145284],
            ],
            [
                [1.18480491, 0.06459553, -0.74616523, 0.28805128, -0.21948819, -0.5292457],
                [1.53748908, 0.16887629, 1.31979255, 0.40734415, -0.8015938, -0.56341347],
                [1.79184371, 0.21133431, 2.54325475, -0.35532523, -2.39096219, 0.40757072],
                [1.34742634, -1.88781838, 0.5379668, -0.37144004, -0.86092851, 2.03400711],
            ],
            [
                [1.18973733, 0.72089111, 0.48625546, 0.17235836, 0.35894532, -1.05842191],
                [1.09037846, 1.51890683, 0.5908089, 0.15968605, -0.14143337, -1.52995493],
                [1.71699911, 0.01210628, 0.88411342, 0.66174938, -1.20659071, 0.30182616],
                [1.48561328, -1.7604855, 0.1096768, -0.22613852, -0.12586981, 1.09505152],
            ],
        ]
    )
    obj.run(res=res, x=x_data, norm="ortho")
